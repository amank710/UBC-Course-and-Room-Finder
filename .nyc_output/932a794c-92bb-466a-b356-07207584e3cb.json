{"C:\\Users\\vande\\source\\repos\\University\\CPSC 310\\project_team131\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\vande\\source\\repos\\University\\CPSC 310\\project_team131\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":178,"6":178,"7":1,"8":1,"9":1,"10":1,"11":2,"12":2,"13":1},"f":{"0":1,"1":178,"2":1,"3":2},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/vande/source/repos/University/CPSC 310/project_team131/src/controller/IInsightFacade.ts","sources":["C:/Users/vande/source/repos/University/CPSC 310/project_team131/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e90ceab5c7baf10402e3d78417b650ae8f0e5852","contentHash":"b0689e45c424e1c541b639ccb1b2b9af84f07131491899df9a62cf2b8e92c5b3"},"C:\\Users\\vande\\source\\repos\\University\\CPSC 310\\project_team131\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\vande\\source\\repos\\University\\CPSC 310\\project_team131\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":25},"end":{"line":29,"column":52}},"28":{"start":{"line":30,"column":16},"end":{"line":30,"column":49}},"29":{"start":{"line":31,"column":11},"end":{"line":31,"column":44}},"30":{"start":{"line":32,"column":24},"end":{"line":32,"column":67}},"31":{"start":{"line":33,"column":23},"end":{"line":33,"column":65}},"32":{"start":{"line":36,"column":8},"end":{"line":36,"column":49}},"33":{"start":{"line":37,"column":24},"end":{"line":37,"column":32}},"34":{"start":{"line":38,"column":8},"end":{"line":60,"column":9}},"35":{"start":{"line":39,"column":12},"end":{"line":59,"column":15}},"36":{"start":{"line":40,"column":16},"end":{"line":58,"column":17}},"37":{"start":{"line":41,"column":20},"end":{"line":57,"column":21}},"38":{"start":{"line":42,"column":42},"end":{"line":42,"column":67}},"39":{"start":{"line":43,"column":41},"end":{"line":43,"column":61}},"40":{"start":{"line":44,"column":37},"end":{"line":44,"column":62}},"41":{"start":{"line":45,"column":40},"end":{"line":47,"column":55}},"42":{"start":{"line":46,"column":46},"end":{"line":46,"column":67}},"43":{"start":{"line":47,"column":46},"end":{"line":47,"column":51}},"44":{"start":{"line":48,"column":40},"end":{"line":52,"column":25}},"45":{"start":{"line":53,"column":24},"end":{"line":53,"column":52}},"46":{"start":{"line":56,"column":24},"end":{"line":56,"column":82}},"47":{"start":{"line":62,"column":15},"end":{"line":62,"column":17}},"48":{"start":{"line":63,"column":23},"end":{"line":63,"column":112}},"49":{"start":{"line":64,"column":21},"end":{"line":64,"column":23}},"50":{"start":{"line":65,"column":23},"end":{"line":65,"column":25}},"51":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"52":{"start":{"line":68,"column":12},"end":{"line":68,"column":83}},"53":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"54":{"start":{"line":70,"column":44},"end":{"line":70,"column":61}},"55":{"start":{"line":71,"column":12},"end":{"line":71,"column":98}},"56":{"start":{"line":74,"column":8},"end":{"line":82,"column":9}},"57":{"start":{"line":75,"column":12},"end":{"line":75,"column":66}},"58":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"59":{"start":{"line":77,"column":16},"end":{"line":77,"column":110}},"60":{"start":{"line":81,"column":12},"end":{"line":81,"column":107}},"61":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"62":{"start":{"line":84,"column":12},"end":{"line":84,"column":96}},"63":{"start":{"line":86,"column":22},"end":{"line":86,"column":23}},"64":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"65":{"start":{"line":88,"column":12},"end":{"line":88,"column":66}},"66":{"start":{"line":90,"column":27},"end":{"line":94,"column":9}},"67":{"start":{"line":95,"column":8},"end":{"line":106,"column":9}},"68":{"start":{"line":96,"column":28},"end":{"line":96,"column":36}},"69":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"70":{"start":{"line":98,"column":16},"end":{"line":98,"column":40}},"71":{"start":{"line":100,"column":12},"end":{"line":100,"column":43}},"72":{"start":{"line":101,"column":29},"end":{"line":101,"column":52}},"73":{"start":{"line":102,"column":12},"end":{"line":102,"column":59}},"74":{"start":{"line":105,"column":12},"end":{"line":105,"column":104}},"75":{"start":{"line":107,"column":8},"end":{"line":107,"column":75}},"76":{"start":{"line":107,"column":62},"end":{"line":107,"column":72}},"77":{"start":{"line":110,"column":20},"end":{"line":110,"column":41}},"78":{"start":{"line":111,"column":34},"end":{"line":111,"column":36}},"79":{"start":{"line":112,"column":8},"end":{"line":117,"column":9}},"80":{"start":{"line":113,"column":12},"end":{"line":113,"column":59}},"81":{"start":{"line":116,"column":12},"end":{"line":116,"column":91}},"82":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"83":{"start":{"line":119,"column":12},"end":{"line":119,"column":94}},"84":{"start":{"line":121,"column":27},"end":{"line":121,"column":32}},"85":{"start":{"line":122,"column":22},"end":{"line":122,"column":31}},"86":{"start":{"line":123,"column":32},"end":{"line":123,"column":34}},"87":{"start":{"line":124,"column":8},"end":{"line":146,"column":9}},"88":{"start":{"line":125,"column":25},"end":{"line":125,"column":40}},"89":{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},"90":{"start":{"line":127,"column":16},"end":{"line":127,"column":135}},"91":{"start":{"line":129,"column":12},"end":{"line":145,"column":13}},"92":{"start":{"line":130,"column":16},"end":{"line":130,"column":36}},"93":{"start":{"line":131,"column":16},"end":{"line":144,"column":17}},"94":{"start":{"line":132,"column":36},"end":{"line":142,"column":22}},"95":{"start":{"line":133,"column":24},"end":{"line":141,"column":25}},"96":{"start":{"line":134,"column":50},"end":{"line":134,"column":69}},"97":{"start":{"line":135,"column":28},"end":{"line":137,"column":29}},"98":{"start":{"line":136,"column":32},"end":{"line":136,"column":76}},"99":{"start":{"line":140,"column":28},"end":{"line":140,"column":117}},"100":{"start":{"line":143,"column":20},"end":{"line":143,"column":50}},"101":{"start":{"line":147,"column":8},"end":{"line":147,"column":43}},"102":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"103":{"start":{"line":149,"column":12},"end":{"line":149,"column":137}},"104":{"start":{"line":151,"column":8},"end":{"line":151,"column":33}},"105":{"start":{"line":154,"column":30},"end":{"line":154,"column":35}},"106":{"start":{"line":155,"column":8},"end":{"line":167,"column":9}},"107":{"start":{"line":156,"column":12},"end":{"line":166,"column":13}},"108":{"start":{"line":157,"column":35},"end":{"line":157,"column":63}},"109":{"start":{"line":158,"column":16},"end":{"line":165,"column":17}},"110":{"start":{"line":159,"column":20},"end":{"line":161,"column":21}},"111":{"start":{"line":160,"column":24},"end":{"line":160,"column":46}},"112":{"start":{"line":162,"column":20},"end":{"line":164,"column":21}},"113":{"start":{"line":162,"column":61},"end":{"line":162,"column":111}},"114":{"start":{"line":163,"column":24},"end":{"line":163,"column":47}},"115":{"start":{"line":168,"column":8},"end":{"line":168,"column":31}},"116":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"117":{"start":{"line":172,"column":12},"end":{"line":172,"column":83}},"118":{"start":{"line":174,"column":29},"end":{"line":174,"column":84}},"119":{"start":{"line":174,"column":66},"end":{"line":174,"column":83}},"120":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"121":{"start":{"line":176,"column":12},"end":{"line":176,"column":103}},"122":{"start":{"line":178,"column":24},"end":{"line":178,"column":32}},"123":{"start":{"line":179,"column":25},"end":{"line":179,"column":48}},"124":{"start":{"line":180,"column":8},"end":{"line":192,"column":9}},"125":{"start":{"line":181,"column":12},"end":{"line":186,"column":13}},"126":{"start":{"line":182,"column":16},"end":{"line":182,"column":42}},"127":{"start":{"line":185,"column":16},"end":{"line":185,"column":119}},"128":{"start":{"line":187,"column":12},"end":{"line":187,"column":50}},"129":{"start":{"line":188,"column":12},"end":{"line":188,"column":39}},"130":{"start":{"line":191,"column":12},"end":{"line":191,"column":114}},"131":{"start":{"line":195,"column":8},"end":{"line":195,"column":62}},"132":{"start":{"line":198,"column":25},"end":{"line":198,"column":54}},"133":{"start":{"line":199,"column":22},"end":{"line":199,"column":50}},"134":{"start":{"line":200,"column":8},"end":{"line":200,"column":33}},"135":{"start":{"line":201,"column":8},"end":{"line":201,"column":35}},"136":{"start":{"line":202,"column":8},"end":{"line":219,"column":9}},"137":{"start":{"line":203,"column":12},"end":{"line":203,"column":103}},"138":{"start":{"line":204,"column":37},"end":{"line":204,"column":114}},"139":{"start":{"line":204,"column":71},"end":{"line":204,"column":113}},"140":{"start":{"line":205,"column":33},"end":{"line":209,"column":14}},"141":{"start":{"line":206,"column":33},"end":{"line":206,"column":59}},"142":{"start":{"line":207,"column":29},"end":{"line":207,"column":56}},"143":{"start":{"line":208,"column":16},"end":{"line":208,"column":28}},"144":{"start":{"line":210,"column":37},"end":{"line":210,"column":68}},"145":{"start":{"line":211,"column":25},"end":{"line":211,"column":68}},"146":{"start":{"line":212,"column":12},"end":{"line":214,"column":13}},"147":{"start":{"line":213,"column":16},"end":{"line":213,"column":100}},"148":{"start":{"line":215,"column":12},"end":{"line":215,"column":55}},"149":{"start":{"line":218,"column":12},"end":{"line":218,"column":87}},"150":{"start":{"line":222,"column":8},"end":{"line":222,"column":46}},"151":{"start":{"line":225,"column":0},"end":{"line":225,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":18},"end":{"line":61,"column":5}},"line":35},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":44},"end":{"line":39,"column":45}},"loc":{"start":{"line":39,"column":54},"end":{"line":59,"column":13}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":46,"column":33},"end":{"line":46,"column":34}},"loc":{"start":{"line":46,"column":46},"end":{"line":46,"column":67}},"line":46},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":36},"end":{"line":47,"column":37}},"loc":{"start":{"line":47,"column":46},"end":{"line":47,"column":51}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":40},"end":{"line":108,"column":5}},"line":66},"12":{"name":"(anonymous_12)","decl":{"start":{"line":70,"column":31},"end":{"line":70,"column":32}},"loc":{"start":{"line":70,"column":44},"end":{"line":70,"column":61}},"line":70},"13":{"name":"(anonymous_13)","decl":{"start":{"line":107,"column":49},"end":{"line":107,"column":50}},"loc":{"start":{"line":107,"column":62},"end":{"line":107,"column":72}},"line":107},"14":{"name":"(anonymous_14)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":34},"end":{"line":152,"column":5}},"line":109},"15":{"name":"(anonymous_15)","decl":{"start":{"line":132,"column":60},"end":{"line":132,"column":61}},"loc":{"start":{"line":132,"column":73},"end":{"line":142,"column":21}},"line":132},"16":{"name":"(anonymous_16)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":40},"end":{"line":169,"column":5}},"line":153},"17":{"name":"(anonymous_17)","decl":{"start":{"line":162,"column":52},"end":{"line":162,"column":53}},"loc":{"start":{"line":162,"column":61},"end":{"line":162,"column":111}},"line":162},"18":{"name":"(anonymous_18)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":28},"end":{"line":193,"column":5}},"line":170},"19":{"name":"(anonymous_19)","decl":{"start":{"line":174,"column":53},"end":{"line":174,"column":54}},"loc":{"start":{"line":174,"column":66},"end":{"line":174,"column":83}},"line":174},"20":{"name":"(anonymous_20)","decl":{"start":{"line":194,"column":4},"end":{"line":194,"column":5}},"loc":{"start":{"line":194,"column":18},"end":{"line":196,"column":5}},"line":194},"21":{"name":"(anonymous_21)","decl":{"start":{"line":197,"column":4},"end":{"line":197,"column":5}},"loc":{"start":{"line":197,"column":30},"end":{"line":220,"column":5}},"line":197},"22":{"name":"(anonymous_22)","decl":{"start":{"line":204,"column":58},"end":{"line":204,"column":59}},"loc":{"start":{"line":204,"column":71},"end":{"line":204,"column":113}},"line":204},"23":{"name":"(anonymous_23)","decl":{"start":{"line":205,"column":59},"end":{"line":205,"column":60}},"loc":{"start":{"line":205,"column":80},"end":{"line":209,"column":13}},"line":205},"24":{"name":"(anonymous_24)","decl":{"start":{"line":221,"column":4},"end":{"line":221,"column":5}},"loc":{"start":{"line":221,"column":19},"end":{"line":223,"column":5}},"line":221}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":38,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":60,"column":9}},{"start":{"line":38,"column":8},"end":{"line":60,"column":9}}],"line":38},"20":{"loc":{"start":{"line":40,"column":16},"end":{"line":58,"column":17}},"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":58,"column":17}},{"start":{"line":40,"column":16},"end":{"line":58,"column":17}}],"line":40},"21":{"loc":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},{"start":{"line":67,"column":8},"end":{"line":69,"column":9}}],"line":67},"22":{"loc":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},{"start":{"line":70,"column":8},"end":{"line":72,"column":9}}],"line":70},"23":{"loc":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},{"start":{"line":76,"column":12},"end":{"line":78,"column":13}}],"line":76},"24":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"25":{"loc":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},{"start":{"line":97,"column":12},"end":{"line":99,"column":13}}],"line":97},"26":{"loc":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},{"start":{"line":118,"column":8},"end":{"line":120,"column":9}}],"line":118},"27":{"loc":{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},"type":"if","locations":[{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},{"start":{"line":126,"column":12},"end":{"line":128,"column":13}}],"line":126},"28":{"loc":{"start":{"line":126,"column":16},"end":{"line":126,"column":65}},"type":"binary-expr","locations":[{"start":{"line":126,"column":16},"end":{"line":126,"column":39}},{"start":{"line":126,"column":43},"end":{"line":126,"column":65}}],"line":126},"29":{"loc":{"start":{"line":129,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":145,"column":13}},{"start":{"line":129,"column":12},"end":{"line":145,"column":13}}],"line":129},"30":{"loc":{"start":{"line":131,"column":16},"end":{"line":144,"column":17}},"type":"if","locations":[{"start":{"line":131,"column":16},"end":{"line":144,"column":17}},{"start":{"line":131,"column":16},"end":{"line":144,"column":17}}],"line":131},"31":{"loc":{"start":{"line":135,"column":28},"end":{"line":137,"column":29}},"type":"if","locations":[{"start":{"line":135,"column":28},"end":{"line":137,"column":29}},{"start":{"line":135,"column":28},"end":{"line":137,"column":29}}],"line":135},"32":{"loc":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},{"start":{"line":148,"column":8},"end":{"line":150,"column":9}}],"line":148},"33":{"loc":{"start":{"line":156,"column":12},"end":{"line":166,"column":13}},"type":"if","locations":[{"start":{"line":156,"column":12},"end":{"line":166,"column":13}},{"start":{"line":156,"column":12},"end":{"line":166,"column":13}}],"line":156},"34":{"loc":{"start":{"line":159,"column":20},"end":{"line":161,"column":21}},"type":"if","locations":[{"start":{"line":159,"column":20},"end":{"line":161,"column":21}},{"start":{"line":159,"column":20},"end":{"line":161,"column":21}}],"line":159},"35":{"loc":{"start":{"line":159,"column":24},"end":{"line":159,"column":72}},"type":"binary-expr","locations":[{"start":{"line":159,"column":24},"end":{"line":159,"column":39}},{"start":{"line":159,"column":43},"end":{"line":159,"column":72}}],"line":159},"36":{"loc":{"start":{"line":162,"column":20},"end":{"line":164,"column":21}},"type":"if","locations":[{"start":{"line":162,"column":20},"end":{"line":164,"column":21}},{"start":{"line":162,"column":20},"end":{"line":164,"column":21}}],"line":162},"37":{"loc":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},{"start":{"line":171,"column":8},"end":{"line":173,"column":9}}],"line":171},"38":{"loc":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},{"start":{"line":175,"column":8},"end":{"line":177,"column":9}}],"line":175},"39":{"loc":{"start":{"line":181,"column":12},"end":{"line":186,"column":13}},"type":"if","locations":[{"start":{"line":181,"column":12},"end":{"line":186,"column":13}},{"start":{"line":181,"column":12},"end":{"line":186,"column":13}}],"line":181},"40":{"loc":{"start":{"line":195,"column":17},"end":{"line":195,"column":60}},"type":"binary-expr","locations":[{"start":{"line":195,"column":17},"end":{"line":195,"column":20}},{"start":{"line":195,"column":24},"end":{"line":195,"column":40}},{"start":{"line":195,"column":44},"end":{"line":195,"column":60}}],"line":195},"41":{"loc":{"start":{"line":212,"column":12},"end":{"line":214,"column":13}},"type":"if","locations":[{"start":{"line":212,"column":12},"end":{"line":214,"column":13}},{"start":{"line":212,"column":12},"end":{"line":214,"column":13}}],"line":212},"42":{"loc":{"start":{"line":212,"column":16},"end":{"line":212,"column":46}},"type":"binary-expr","locations":[{"start":{"line":212,"column":16},"end":{"line":212,"column":22}},{"start":{"line":212,"column":26},"end":{"line":212,"column":46}}],"line":212}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":145,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":3,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":40,"33":40,"34":40,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":8,"43":8,"44":1,"45":1,"46":0,"47":40,"48":40,"49":40,"50":40,"51":39,"52":3,"53":36,"54":5,"55":1,"56":35,"57":35,"58":27,"59":5,"60":8,"61":22,"62":1,"63":21,"64":21,"65":17948,"66":21,"67":21,"68":21,"69":21,"70":17,"71":21,"72":21,"73":21,"74":0,"75":21,"76":25,"77":35,"78":35,"79":35,"80":35,"81":3,"82":32,"83":1,"84":31,"85":31,"86":31,"87":31,"88":17969,"89":17969,"90":1,"91":17968,"92":17967,"93":17967,"94":17964,"95":17964,"96":17964,"97":17961,"98":17959,"99":3,"100":17964,"101":30,"102":28,"103":1,"104":27,"105":27,"106":27,"107":17959,"108":17959,"109":17959,"110":194407,"111":74102,"112":194407,"113":1944044,"114":194402,"115":27,"116":8,"117":3,"118":5,"119":5,"120":5,"121":1,"122":4,"123":4,"124":4,"125":4,"126":4,"127":0,"128":4,"129":4,"130":0,"131":47,"132":110,"133":110,"134":110,"135":110,"136":110,"137":110,"138":36,"139":36,"140":36,"141":36,"142":36,"143":36,"144":36,"145":36,"146":36,"147":2,"148":34,"149":74,"150":7,"151":1},"f":{"0":148,"1":145,"2":0,"3":1,"4":0,"5":1,"6":3,"7":40,"8":1,"9":8,"10":8,"11":39,"12":5,"13":25,"14":35,"15":17964,"16":27,"17":1944044,"18":8,"19":5,"20":47,"21":110,"22":36,"23":36,"24":7},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[1,1,1],"17":[2,1],"18":[3,3],"19":[1,39],"20":[1,0],"21":[3,36],"22":[1,35],"23":[5,22],"24":[1,21],"25":[17,4],"26":[1,31],"27":[1,17968],"28":[17969,1],"29":[17967,1],"30":[17964,3],"31":[17959,2],"32":[1,27],"33":[17959,0],"34":[74102,120305],"35":[194407,194406],"36":[194402,5],"37":[3,5],"38":[1,4],"39":[4,0],"40":[47,45,43],"41":[2,34],"42":[36,36]},"inputSourceMap":{"version":3,"file":"C:/Users/vande/source/repos/University/CPSC 310/project_team131/src/controller/InsightFacade.ts","sources":["C:/Users/vande/source/repos/University/CPSC 310/project_team131/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tIInsightFacade,\r\n\tInsightDataset,\r\n\tInsightDatasetKind,\r\n\tInsightError,\r\n\tInsightResult,\r\n\tNotFoundError, ResultTooLargeError,\r\n} from \"./IInsightFacade\";\r\nimport JSZip from \"jszip\";\r\nimport * as fs from \"fs-extra\";\r\n// import {Query} from \"../interfaces/queryTypes\";\r\nimport {ExtractedContent} from \"../interfaces/datasetType\";\r\nimport {Query} from \"../interfaces/queryTypes\";\r\nimport ValidatingQuery from \"./validingQuery\";\r\nimport GettingQuery from \"./gettingQuery\";\r\n\r\n\r\n/**\r\n * This is the main programmatic entry point for the project.\r\n * Method documentation is in IInsightFacade\r\n *\r\n */\r\nexport default class InsightFacade implements IInsightFacade {\r\n\tconstructor() {\r\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\r\n\t\tconst dirPath = \"./data\";\r\n\t\tif (fs.existsSync(dirPath)) {\r\n\t\t\tfs.readdirSync(dirPath).forEach((file) => {\r\n\t\t\t\tif (file.endsWith(\".json\")) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst datasetId = file.replace(\".json\", \"\");\r\n\t\t\t\t\t\tconst filePath = `${dirPath}/${file}`;\r\n\t\t\t\t\t\tconst data = fs.readJsonSync(filePath);\r\n\t\t\t\t\t\tconst numRows = Object.values(data)\r\n\t\t\t\t\t\t\t.map((content: any) => content.result.length)\r\n\t\t\t\t\t\t\t.reduce((a, b) => a + b, 0);\r\n\t\t\t\t\t\tconst dataset: InsightDataset = {\r\n\t\t\t\t\t\t\tid: datasetId,\r\n\t\t\t\t\t\t\tkind: InsightDatasetKind.Sections,\r\n\t\t\t\t\t\t\tnumRows: numRows,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.datasets.push(dataset);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(`Failed to load dataset from ${file}`, err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate datasets: InsightDataset[] = [];\r\n\tprivate requiredKeysFile = [\"id\",\"Course\",\"Title\",\"Professor\",\"Subject\",\"Year\", \"Avg\", \"Pass\", \"Fail\", \"Audit\"];\r\n\tprivate columnsKeyList: string[] = [];\r\n\tprivate dataSetsAccessed: string[] = [];\r\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\r\n\t\tif (!this.isValidId(id)) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\r\n\t\t}\r\n\r\n\t\tif (this.datasets.find((dataset) => dataset.id === id)) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Dataset ID already exists\"));\r\n\t\t}\r\n\r\n\r\n\t\tlet extractedContent;\r\n\t\ttry {\r\n\t\t\textractedContent = await this.extractFromZip(content);\r\n\r\n\t\t\tif (!this.checkTheExtracted(extractedContent)) {\r\n\t\t\t\treturn Promise.reject(new InsightError(\"The dataset is not valid zip file\"));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Failed to extract content from ZIP\"));\r\n\t\t}\r\n\r\n\t\tif (kind !== InsightDatasetKind.Sections) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Is not of kind Sections\"));\r\n\t\t}\r\n\t\tlet numRows = 0;\r\n\r\n\t\tfor (let coursePath in extractedContent) {\r\n\t\t\tnumRows += extractedContent[coursePath].result.length;\r\n\t\t}\r\n\t\tconst newDataset: InsightDataset = {\r\n\t\t\tid: id,\r\n\t\t\tkind: kind,\r\n\t\t\tnumRows: numRows,\r\n\t\t};\r\n\t\ttry{\r\n\t\t\tconst dirPath = \"./data\";\r\n\t\t\tif (!fs.existsSync(dirPath)) {\r\n\t\t\t\tawait fs.mkdir(dirPath);\r\n\t\t\t}\r\n\t\t\tthis.datasets.push(newDataset);\r\n\t\t\tconst filePath = `${dirPath}/${id}.json`;\r\n\t\t\tawait fs.writeJson(filePath, extractedContent);\r\n\t\t} catch (err) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Failed to write dataset to disk\"));\r\n\t\t}\r\n\r\n\r\n\t\treturn Promise.resolve(this.datasets.map((dataset) => dataset.id));\r\n\t}\r\n\r\n\tprivate async extractFromZip(content: string): Promise<ExtractedContent> {\r\n\t\tconst zip = new JSZip();\r\n\t\tconst structuredContent: ExtractedContent = {};\r\n\r\n\t\ttry {\r\n\t\t\tawait zip.loadAsync(content, {base64: true});\r\n\t\t} catch (e) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Failed to load ZIP\"));\r\n\t\t}\r\n\t\tif (!Object.keys(zip.files).length) {\r\n\t\t\treturn Promise.reject(new InsightError(\"The zip file is empty\"));\r\n\t\t}\r\n\t\tlet foundCourses = false;\r\n\t\tconst files = zip.files;\r\n\t\tconst loadingPromises = [];\r\n\r\n\t\tfor (const fileName in files) {\r\n\t\t\tconst file = files[fileName];\r\n\r\n\t\t\tif (!fileName.includes(\"/\") && fileName !== \"courses\") {\r\n\t\t\t\treturn Promise.reject(new InsightError(`Unexpected file/folder at the root of the ZIP: ${fileName}`));\r\n\t\t\t}\r\n\r\n\t\t\tif (fileName.startsWith(\"courses\")) {\r\n\t\t\t\tfoundCourses = true;\r\n\t\t\t\tif (!file.dir) {\r\n\t\t\t\t\tconst promise = file.async(\"text\").then((section) => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst parsedContent = JSON.parse(section);\r\n\t\t\t\t\t\t\tif (parsedContent.result) {\r\n\t\t\t\t\t\t\t\tstructuredContent[fileName] = parsedContent;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthrow new InsightError(`Failed to parse content for file: ${fileName}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tloadingPromises.push(promise);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait Promise.all(loadingPromises);\r\n\r\n\t\tif (!foundCourses) {\r\n\t\t\treturn Promise.reject(new InsightError(\"The ZIP does not contain a 'courses' file or folder at its root.\"));\r\n\t\t}\r\n\r\n\t\treturn structuredContent;\r\n\t}\r\n\r\n\tprivate checkTheExtracted(extractedContent: ExtractedContent): boolean {\r\n\t\tlet hasValidSection = false;\r\n\t\tfor (const coursePath in extractedContent) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(extractedContent, coursePath)) {\r\n\t\t\t\tconst courseData = extractedContent[coursePath];\r\n\t\t\t\tfor (const section of courseData.result) {\r\n\t\t\t\t\tif (section.Section && section.Section === \"overall\") {\r\n\t\t\t\t\t\tsection.Year = \"1900\"; // Modify the Year directly in extractedContent\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.requiredKeysFile.every((key) => Object.prototype.hasOwnProperty.call(section, key))) {\r\n\t\t\t\t\t\thasValidSection = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn hasValidSection;\r\n\t}\r\n\tpublic async removeDataset(id: string): Promise<string> {\r\n\t\tif (!this.isValidId(id)) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\r\n\t\t}\r\n\r\n\t\tconst datasetIndex = this.datasets.findIndex((dataset) => dataset.id === id);\r\n\r\n\t\tif (datasetIndex === -1) {\r\n\t\t\treturn Promise.reject(new NotFoundError(\"Dataset ID has not been added\"));\r\n\t\t}\r\n\r\n\t\tconst dirPath = \"./data\";\r\n\t\tconst filePath = `${dirPath}/${id}.json`;\r\n\r\n\t\ttry {\r\n\t\t\tif (await fs.pathExists(filePath)) {\r\n\t\t\t\tawait fs.unlink(filePath);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(`File ${filePath} does not exist on the disk, but the dataset is in the datasets array.`);\r\n\t\t\t}\r\n\r\n\t\t\tthis.datasets.splice(datasetIndex, 1);\r\n\t\t\treturn Promise.resolve(id);\r\n\r\n\t\t} catch (err) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Failed to remove dataset from disk. Error\"));\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic isValidId(id: string): boolean {\r\n\t\treturn !(!id || /^\\s*$/.test(id) || id.includes(\"_\"));\r\n\t}\r\n\tpublic async performQuery(query: Query): Promise<InsightResult[]> {\r\n\t\tlet validating = new ValidatingQuery();\r\n\t\tlet getting = new GettingQuery();\r\n\t\tthis.columnsKeyList = [];\r\n\t\tthis.dataSetsAccessed = [];\r\n\r\n\t\ttry {\r\n\t\t\tvalidating.validateQuery(query, this.columnsKeyList, this.dataSetsAccessed, this.datasets);\r\n\r\n\t\t\tconst filteredDatasets = this.datasets.filter((dataset) => this.dataSetsAccessed.includes(dataset.id));\r\n\r\n\t\t\tconst readPromises = this.dataSetsAccessed.map(async (datasetId) => {\r\n\t\t\t\tconst filePath = `./data/${datasetId}.json`;\r\n\t\t\t\tconst data: ExtractedContent = await fs.readJson(filePath);\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t\t\tconst datasetsContents: ExtractedContent[] = await Promise.all(readPromises);\r\n\r\n\t\t\tlet result = getting.applyWhere(query, datasetsContents);\r\n\t\t\tif(result && result.length > 5000){\r\n\t\t\t\treturn Promise.reject(new ResultTooLargeError(\"Result too large\"));\r\n\t\t\t}\r\n\t\t\treturn getting.applyOptions(query, result);\r\n\r\n\t\t} catch (error) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Error occurred\"));\r\n\t\t}\r\n\t}\r\n\tpublic listDatasets(): Promise<InsightDataset[]> {\r\n\t\treturn Promise.resolve(this.datasets);\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"611dcdf0d6d44784a2925ca37a22e73dff364800","contentHash":"bd70fa2adfa777fa12df7e35c72ce111d6d6a5b693224c2d97457b15d5150d6d"},"C:\\Users\\vande\\source\\repos\\University\\CPSC 310\\project_team131\\src\\controller\\validingQuery.ts":{"path":"C:\\Users\\vande\\source\\repos\\University\\CPSC 310\\project_team131\\src\\controller\\validingQuery.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":5,"column":25},"end":{"line":5,"column":110}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":62}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":57}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":23}},"6":{"start":{"line":9,"column":23},"end":{"line":9,"column":25}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":17}},"8":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":69}},"10":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":16,"column":12},"end":{"line":16,"column":78}},"12":{"start":{"line":19,"column":12},"end":{"line":19,"column":38}},"13":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"14":{"start":{"line":22,"column":12},"end":{"line":22,"column":80}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":40}},"16":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"17":{"start":{"line":28,"column":12},"end":{"line":28,"column":71}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":36}},"19":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"20":{"start":{"line":34,"column":12},"end":{"line":34,"column":71}},"21":{"start":{"line":37,"column":12},"end":{"line":37,"column":45}},"22":{"start":{"line":39,"column":8},"end":{"line":44,"column":9}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":68}},"24":{"start":{"line":43,"column":12},"end":{"line":43,"column":41}},"25":{"start":{"line":45,"column":8},"end":{"line":45,"column":20}},"26":{"start":{"line":48,"column":21},"end":{"line":48,"column":39}},"27":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"28":{"start":{"line":50,"column":12},"end":{"line":50,"column":101}},"29":{"start":{"line":52,"column":20},"end":{"line":52,"column":27}},"30":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"31":{"start":{"line":54,"column":12},"end":{"line":54,"column":24}},"32":{"start":{"line":56,"column":8},"end":{"line":93,"column":9}},"33":{"start":{"line":57,"column":30},"end":{"line":57,"column":40}},"34":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"35":{"start":{"line":59,"column":16},"end":{"line":59,"column":87}},"36":{"start":{"line":61,"column":12},"end":{"line":61,"column":54}},"37":{"start":{"line":63,"column":13},"end":{"line":93,"column":9}},"38":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"39":{"start":{"line":65,"column":16},"end":{"line":65,"column":84}},"40":{"start":{"line":67,"column":28},"end":{"line":67,"column":50}},"41":{"start":{"line":68,"column":12},"end":{"line":70,"column":13}},"42":{"start":{"line":69,"column":16},"end":{"line":69,"column":86}},"43":{"start":{"line":71,"column":30},"end":{"line":71,"column":40}},"44":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"45":{"start":{"line":73,"column":16},"end":{"line":73,"column":87}},"46":{"start":{"line":75,"column":12},"end":{"line":75,"column":39}},"47":{"start":{"line":77,"column":13},"end":{"line":93,"column":9}},"48":{"start":{"line":78,"column":30},"end":{"line":78,"column":40}},"49":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"50":{"start":{"line":80,"column":16},"end":{"line":80,"column":87}},"51":{"start":{"line":82,"column":12},"end":{"line":82,"column":58}},"52":{"start":{"line":84,"column":13},"end":{"line":93,"column":9}},"53":{"start":{"line":85,"column":30},"end":{"line":85,"column":40}},"54":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"55":{"start":{"line":87,"column":16},"end":{"line":87,"column":87}},"56":{"start":{"line":89,"column":12},"end":{"line":89,"column":58}},"57":{"start":{"line":92,"column":12},"end":{"line":92,"column":79}},"58":{"start":{"line":94,"column":8},"end":{"line":94,"column":20}},"59":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"60":{"start":{"line":98,"column":12},"end":{"line":98,"column":82}},"61":{"start":{"line":100,"column":8},"end":{"line":106,"column":11}},"62":{"start":{"line":101,"column":31},"end":{"line":101,"column":50}},"63":{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},"64":{"start":{"line":103,"column":16},"end":{"line":103,"column":99}},"65":{"start":{"line":105,"column":12},"end":{"line":105,"column":36}},"66":{"start":{"line":107,"column":8},"end":{"line":107,"column":20}},"67":{"start":{"line":110,"column":21},"end":{"line":110,"column":44}},"68":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"69":{"start":{"line":112,"column":12},"end":{"line":112,"column":83}},"70":{"start":{"line":114,"column":20},"end":{"line":114,"column":27}},"71":{"start":{"line":115,"column":8},"end":{"line":115,"column":44}},"72":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"73":{"start":{"line":117,"column":12},"end":{"line":117,"column":83}},"74":{"start":{"line":119,"column":8},"end":{"line":119,"column":20}},"75":{"start":{"line":122,"column":21},"end":{"line":122,"column":44}},"76":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"77":{"start":{"line":124,"column":12},"end":{"line":124,"column":83}},"78":{"start":{"line":126,"column":20},"end":{"line":126,"column":27}},"79":{"start":{"line":127,"column":8},"end":{"line":127,"column":44}},"80":{"start":{"line":128,"column":22},"end":{"line":128,"column":37}},"81":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"82":{"start":{"line":130,"column":12},"end":{"line":130,"column":106}},"83":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"84":{"start":{"line":133,"column":12},"end":{"line":133,"column":24}},"85":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"86":{"start":{"line":136,"column":12},"end":{"line":136,"column":25}},"87":{"start":{"line":138,"column":35},"end":{"line":138,"column":56}},"88":{"start":{"line":139,"column":33},"end":{"line":139,"column":52}},"89":{"start":{"line":140,"column":27},"end":{"line":140,"column":32}},"90":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"91":{"start":{"line":142,"column":12},"end":{"line":142,"column":53}},"92":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"93":{"start":{"line":145,"column":12},"end":{"line":145,"column":78}},"94":{"start":{"line":147,"column":8},"end":{"line":149,"column":9}},"95":{"start":{"line":148,"column":12},"end":{"line":148,"column":121}},"96":{"start":{"line":150,"column":8},"end":{"line":150,"column":20}},"97":{"start":{"line":153,"column":8},"end":{"line":158,"column":9}},"98":{"start":{"line":154,"column":12},"end":{"line":154,"column":71}},"99":{"start":{"line":157,"column":12},"end":{"line":157,"column":47}},"100":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"101":{"start":{"line":160,"column":12},"end":{"line":160,"column":43}},"102":{"start":{"line":164,"column":8},"end":{"line":167,"column":11}},"103":{"start":{"line":165,"column":12},"end":{"line":165,"column":59}},"104":{"start":{"line":166,"column":12},"end":{"line":166,"column":45}},"105":{"start":{"line":168,"column":8},"end":{"line":168,"column":20}},"106":{"start":{"line":171,"column":8},"end":{"line":194,"column":9}},"107":{"start":{"line":172,"column":12},"end":{"line":172,"column":58}},"108":{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},"109":{"start":{"line":174,"column":16},"end":{"line":174,"column":84}},"110":{"start":{"line":177,"column":13},"end":{"line":194,"column":9}},"111":{"start":{"line":178,"column":34},"end":{"line":178,"column":39}},"112":{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},"113":{"start":{"line":180,"column":16},"end":{"line":180,"column":86}},"114":{"start":{"line":182,"column":12},"end":{"line":184,"column":13}},"115":{"start":{"line":183,"column":16},"end":{"line":183,"column":81}},"116":{"start":{"line":185,"column":12},"end":{"line":190,"column":15}},"117":{"start":{"line":186,"column":16},"end":{"line":186,"column":60}},"118":{"start":{"line":187,"column":16},"end":{"line":189,"column":17}},"119":{"start":{"line":188,"column":20},"end":{"line":188,"column":95}},"120":{"start":{"line":193,"column":12},"end":{"line":193,"column":74}},"121":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"122":{"start":{"line":198,"column":20},"end":{"line":198,"column":34}},"123":{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},"124":{"start":{"line":200,"column":12},"end":{"line":200,"column":78}},"125":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"126":{"start":{"line":203,"column":12},"end":{"line":203,"column":74}},"127":{"start":{"line":205,"column":44},"end":{"line":205,"column":49}},"128":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"129":{"start":{"line":207,"column":12},"end":{"line":207,"column":86}},"130":{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},"131":{"start":{"line":210,"column":12},"end":{"line":210,"column":93}},"132":{"start":{"line":212,"column":8},"end":{"line":212,"column":20}},"133":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"134":{"start":{"line":216,"column":12},"end":{"line":216,"column":24}},"135":{"start":{"line":218,"column":33},"end":{"line":218,"column":92}},"136":{"start":{"line":218,"column":65},"end":{"line":218,"column":91}},"137":{"start":{"line":219,"column":8},"end":{"line":225,"column":9}},"138":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"139":{"start":{"line":221,"column":16},"end":{"line":221,"column":93}},"140":{"start":{"line":223,"column":12},"end":{"line":223,"column":52}},"141":{"start":{"line":224,"column":12},"end":{"line":224,"column":24}},"142":{"start":{"line":226,"column":8},"end":{"line":226,"column":21}},"143":{"start":{"line":229,"column":0},"end":{"line":229,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":44},"end":{"line":46,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":22},"end":{"line":95,"column":5}},"line":47},"2":{"name":"(anonymous_2)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":39},"end":{"line":108,"column":5}},"line":96},"3":{"name":"(anonymous_3)","decl":{"start":{"line":100,"column":24},"end":{"line":100,"column":25}},"loc":{"start":{"line":100,"column":36},"end":{"line":106,"column":9}},"line":100},"4":{"name":"(anonymous_4)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":46},"end":{"line":120,"column":5}},"line":109},"5":{"name":"(anonymous_5)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":46},"end":{"line":151,"column":5}},"line":121},"6":{"name":"(anonymous_6)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":26},"end":{"line":162,"column":5}},"line":152},"7":{"name":"(anonymous_7)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":26},"end":{"line":169,"column":5}},"line":163},"8":{"name":"(anonymous_8)","decl":{"start":{"line":164,"column":24},"end":{"line":164,"column":25}},"loc":{"start":{"line":164,"column":36},"end":{"line":167,"column":9}},"line":164},"9":{"name":"(anonymous_9)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":22},"end":{"line":196,"column":5}},"line":170},"10":{"name":"(anonymous_10)","decl":{"start":{"line":185,"column":25},"end":{"line":185,"column":26}},"loc":{"start":{"line":185,"column":34},"end":{"line":190,"column":13}},"line":185},"11":{"name":"(anonymous_11)","decl":{"start":{"line":197,"column":4},"end":{"line":197,"column":5}},"loc":{"start":{"line":197,"column":24},"end":{"line":213,"column":5}},"line":197},"12":{"name":"(anonymous_12)","decl":{"start":{"line":214,"column":4},"end":{"line":214,"column":5}},"loc":{"start":{"line":214,"column":35},"end":{"line":227,"column":5}},"line":214},"13":{"name":"(anonymous_13)","decl":{"start":{"line":218,"column":52},"end":{"line":218,"column":53}},"loc":{"start":{"line":218,"column":65},"end":{"line":218,"column":91}},"line":218}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"1":{"loc":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},{"start":{"line":15,"column":8},"end":{"line":20,"column":9}}],"line":15},"2":{"loc":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},{"start":{"line":21,"column":8},"end":{"line":26,"column":9}}],"line":21},"3":{"loc":{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":32,"column":9}},{"start":{"line":27,"column":8},"end":{"line":32,"column":9}}],"line":27},"4":{"loc":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},{"start":{"line":33,"column":8},"end":{"line":38,"column":9}}],"line":33},"5":{"loc":{"start":{"line":39,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":44,"column":9}},{"start":{"line":39,"column":8},"end":{"line":44,"column":9}}],"line":39},"6":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{"line":49,"column":8},"end":{"line":51,"column":9}}],"line":49},"7":{"loc":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{"line":53,"column":8},"end":{"line":55,"column":9}}],"line":53},"8":{"loc":{"start":{"line":56,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":93,"column":9}},{"start":{"line":56,"column":8},"end":{"line":93,"column":9}}],"line":56},"9":{"loc":{"start":{"line":56,"column":12},"end":{"line":56,"column":41}},"type":"binary-expr","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":25}},{"start":{"line":56,"column":29},"end":{"line":56,"column":41}}],"line":56},"10":{"loc":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},{"start":{"line":58,"column":12},"end":{"line":60,"column":13}}],"line":58},"11":{"loc":{"start":{"line":63,"column":13},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":13},"end":{"line":93,"column":9}},{"start":{"line":63,"column":13},"end":{"line":93,"column":9}}],"line":63},"12":{"loc":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},{"start":{"line":64,"column":12},"end":{"line":66,"column":13}}],"line":64},"13":{"loc":{"start":{"line":68,"column":12},"end":{"line":70,"column":13}},"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":70,"column":13}},{"start":{"line":68,"column":12},"end":{"line":70,"column":13}}],"line":68},"14":{"loc":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},{"start":{"line":72,"column":12},"end":{"line":74,"column":13}}],"line":72},"15":{"loc":{"start":{"line":77,"column":13},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":13},"end":{"line":93,"column":9}},{"start":{"line":77,"column":13},"end":{"line":93,"column":9}}],"line":77},"16":{"loc":{"start":{"line":77,"column":17},"end":{"line":77,"column":61}},"type":"binary-expr","locations":[{"start":{"line":77,"column":17},"end":{"line":77,"column":29}},{"start":{"line":77,"column":33},"end":{"line":77,"column":45}},{"start":{"line":77,"column":49},"end":{"line":77,"column":61}}],"line":77},"17":{"loc":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},{"start":{"line":79,"column":12},"end":{"line":81,"column":13}}],"line":79},"18":{"loc":{"start":{"line":84,"column":13},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":13},"end":{"line":93,"column":9}},{"start":{"line":84,"column":13},"end":{"line":93,"column":9}}],"line":84},"19":{"loc":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},{"start":{"line":86,"column":12},"end":{"line":88,"column":13}}],"line":86},"20":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{"line":97,"column":8},"end":{"line":99,"column":9}}],"line":97},"21":{"loc":{"start":{"line":97,"column":12},"end":{"line":97,"column":59}},"type":"binary-expr","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":35}},{"start":{"line":97,"column":39},"end":{"line":97,"column":59}}],"line":97},"22":{"loc":{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},{"start":{"line":102,"column":12},"end":{"line":104,"column":13}}],"line":102},"23":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"24":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{"line":116,"column":8},"end":{"line":118,"column":9}}],"line":116},"25":{"loc":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},{"start":{"line":123,"column":8},"end":{"line":125,"column":9}}],"line":123},"26":{"loc":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},{"start":{"line":129,"column":8},"end":{"line":131,"column":9}}],"line":129},"27":{"loc":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},{"start":{"line":132,"column":8},"end":{"line":134,"column":9}}],"line":132},"28":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"29":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"30":{"loc":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},{"start":{"line":144,"column":8},"end":{"line":146,"column":9}}],"line":144},"31":{"loc":{"start":{"line":147,"column":8},"end":{"line":149,"column":9}},"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":149,"column":9}},{"start":{"line":147,"column":8},"end":{"line":149,"column":9}}],"line":147},"32":{"loc":{"start":{"line":147,"column":12},"end":{"line":147,"column":67}},"type":"binary-expr","locations":[{"start":{"line":147,"column":12},"end":{"line":147,"column":37}},{"start":{"line":147,"column":41},"end":{"line":147,"column":67}}],"line":147},"33":{"loc":{"start":{"line":153,"column":8},"end":{"line":158,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":158,"column":9}},{"start":{"line":153,"column":8},"end":{"line":158,"column":9}}],"line":153},"34":{"loc":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},{"start":{"line":159,"column":8},"end":{"line":161,"column":9}}],"line":159},"35":{"loc":{"start":{"line":171,"column":8},"end":{"line":194,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":194,"column":9}},{"start":{"line":171,"column":8},"end":{"line":194,"column":9}}],"line":171},"36":{"loc":{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},{"start":{"line":173,"column":12},"end":{"line":175,"column":13}}],"line":173},"37":{"loc":{"start":{"line":177,"column":13},"end":{"line":194,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":13},"end":{"line":194,"column":9}},{"start":{"line":177,"column":13},"end":{"line":194,"column":9}}],"line":177},"38":{"loc":{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},"type":"if","locations":[{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},{"start":{"line":179,"column":12},"end":{"line":181,"column":13}}],"line":179},"39":{"loc":{"start":{"line":179,"column":16},"end":{"line":179,"column":53}},"type":"binary-expr","locations":[{"start":{"line":179,"column":16},"end":{"line":179,"column":20}},{"start":{"line":179,"column":24},"end":{"line":179,"column":53}}],"line":179},"40":{"loc":{"start":{"line":182,"column":12},"end":{"line":184,"column":13}},"type":"if","locations":[{"start":{"line":182,"column":12},"end":{"line":184,"column":13}},{"start":{"line":182,"column":12},"end":{"line":184,"column":13}}],"line":182},"41":{"loc":{"start":{"line":182,"column":16},"end":{"line":182,"column":66}},"type":"binary-expr","locations":[{"start":{"line":182,"column":16},"end":{"line":182,"column":21}},{"start":{"line":182,"column":25},"end":{"line":182,"column":45}},{"start":{"line":182,"column":49},"end":{"line":182,"column":66}}],"line":182},"42":{"loc":{"start":{"line":187,"column":16},"end":{"line":189,"column":17}},"type":"if","locations":[{"start":{"line":187,"column":16},"end":{"line":189,"column":17}},{"start":{"line":187,"column":16},"end":{"line":189,"column":17}}],"line":187},"43":{"loc":{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},{"start":{"line":199,"column":8},"end":{"line":201,"column":9}}],"line":199},"44":{"loc":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},{"start":{"line":202,"column":8},"end":{"line":204,"column":9}}],"line":202},"45":{"loc":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},{"start":{"line":206,"column":8},"end":{"line":208,"column":9}}],"line":206},"46":{"loc":{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},{"start":{"line":209,"column":8},"end":{"line":211,"column":9}}],"line":209},"47":{"loc":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},{"start":{"line":215,"column":8},"end":{"line":217,"column":9}}],"line":215},"48":{"loc":{"start":{"line":219,"column":8},"end":{"line":225,"column":9}},"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":225,"column":9}},{"start":{"line":219,"column":8},"end":{"line":225,"column":9}}],"line":219},"49":{"loc":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"type":"if","locations":[{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},{"start":{"line":220,"column":12},"end":{"line":222,"column":13}}],"line":220}},"s":{"0":1,"1":1,"2":110,"3":110,"4":110,"5":110,"6":110,"7":110,"8":110,"9":0,"10":110,"11":0,"12":110,"13":110,"14":0,"15":110,"16":110,"17":0,"18":110,"19":110,"20":4,"21":106,"22":87,"23":1,"24":86,"25":36,"26":230,"27":230,"28":0,"29":230,"30":230,"31":1,"32":229,"33":72,"34":72,"35":0,"36":72,"37":157,"38":15,"39":0,"40":15,"41":15,"42":1,"43":14,"44":14,"45":0,"46":14,"47":142,"48":92,"49":92,"50":0,"51":92,"52":50,"53":44,"54":44,"55":0,"56":44,"57":6,"58":155,"59":72,"60":6,"61":66,"62":132,"63":132,"64":2,"65":130,"66":43,"67":92,"68":92,"69":3,"70":89,"71":89,"72":77,"73":9,"74":68,"75":44,"76":44,"77":1,"78":43,"79":43,"80":37,"81":37,"82":1,"83":36,"84":3,"85":33,"86":0,"87":33,"88":33,"89":33,"90":33,"91":12,"92":33,"93":20,"94":33,"95":3,"96":30,"97":106,"98":2,"99":104,"100":93,"101":81,"102":104,"103":268,"104":257,"105":93,"106":81,"107":77,"108":76,"109":1,"110":4,"111":3,"112":3,"113":2,"114":1,"115":1,"116":0,"117":0,"118":0,"119":0,"120":1,"121":75,"122":477,"123":477,"124":10,"125":467,"126":0,"127":467,"128":467,"129":14,"130":453,"131":6,"132":447,"133":453,"134":351,"135":102,"136":102,"137":102,"138":96,"139":0,"140":96,"141":96,"142":6,"143":1},"f":{"0":110,"1":230,"2":72,"3":132,"4":92,"5":44,"6":106,"7":104,"8":268,"9":81,"10":0,"11":477,"12":453,"13":102},"b":{"0":[0,110],"1":[0,110],"2":[0,110],"3":[0,110],"4":[4,106],"5":[1,86],"6":[0,230],"7":[1,229],"8":[72,157],"9":[229,192],"10":[0,72],"11":[15,142],"12":[0,15],"13":[1,14],"14":[0,14],"15":[92,50],"16":[142,89,75],"17":[0,92],"18":[44,6],"19":[0,44],"20":[6,66],"21":[72,68],"22":[2,130],"23":[3,89],"24":[9,68],"25":[1,43],"26":[1,36],"27":[3,33],"28":[0,33],"29":[12,21],"30":[20,13],"31":[3,30],"32":[33,33],"33":[2,104],"34":[81,12],"35":[77,4],"36":[1,75],"37":[3,1],"38":[2,1],"39":[3,2],"40":[1,0],"41":[1,1,1],"42":[0,0],"43":[10,467],"44":[0,467],"45":[14,453],"46":[6,447],"47":[351,102],"48":[96,6],"49":[0,96]},"inputSourceMap":{"version":3,"file":"C:/Users/vande/source/repos/University/CPSC 310/project_team131/src/controller/validingQuery.ts","sources":["C:/Users/vande/source/repos/University/CPSC 310/project_team131/src/controller/validingQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import {Columns, Filter, MComparison, Options, Order, Query, SComparison, Where} from \"../interfaces/queryTypes\";\r\nimport {InsightDataset, InsightError} from \"./IInsightFacade\";\r\n\r\nexport default class ValidatingQuery {\r\n\tprivate requireKeysDataset = [\"uuid\", \"id\", \"title\", \"instructor\",\"dept\", \"year\", \"avg\", \"pass\", \"fail\", \"audit\"];\r\n\tprivate stringKeys = [\"uuid\", \"id\", \"title\", \"instructor\", \"dept\"];\r\n\tprivate numberKeys = [\"year\", \"avg\", \"pass\", \"fail\", \"audit\"];\r\n\tprivate columnsKeyList: string[] = [];\r\n\tprivate dataSetsAccessed: string[] = [];\r\n\tprivate datasets: InsightDataset[] = [];\r\n\tpublic validateQuery(query: Query, cKL: string[], dSA: string[], dataset: InsightDataset[]): boolean{\r\n\t\tif(!query){\r\n\t\t\tthrow new InsightError(\"Query is null\");\r\n\t\t}\r\n\t\tif(!cKL){\r\n\t\t\tthrow new InsightError(\"columnsKeyList is null\");\r\n\t\t} else {\r\n\t\t\tthis.columnsKeyList = cKL;\r\n\t\t}\r\n\t\tif(!dSA){\r\n\t\t\tthrow new InsightError(\"dataSetsAccessed is null\");\r\n\t\t} else {\r\n\t\t\tthis.dataSetsAccessed = dSA;\r\n\t\t}\r\n\t\tif(!dataset){\r\n\t\t\tthrow new InsightError(\"dataset is null\");\r\n\t\t} else {\r\n\t\t\tthis.datasets = dataset;\r\n\t\t}\r\n\t\tif(!query.OPTIONS){\r\n\t\t\tthrow new InsightError(\"OPTIONS is null\");\r\n\t\t} else{\r\n\t\t\tthis.checkOptions(query.OPTIONS);\r\n\t\t}\r\n\t\tif(!query.WHERE){\r\n\t\t\tthrow new InsightError(\"BODY is null\");\r\n\t\t} else{\r\n\t\t\tthis.checkWhere(query.WHERE);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate checkWhere(where: Where): boolean {\r\n\t\tconst keys = Object.keys(where);\r\n\t\tif (keys.length > 1) {\r\n\t\t\tthrow new InsightError(\"A Where condition should have exactly one key\");\r\n\t\t}\r\n\r\n\t\tconst key = keys[0];\r\n\t\tif (!key) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (key === \"AND\" || key === \"OR\") {\r\n\t\t\tconst condition = where[key];\r\n\t\t\tif (condition === undefined) {\r\n\t\t\t\tthrow new InsightError(`${key} condition is missing`);\r\n\t\t\t}\r\n\t\t\tthis.checkLogicComparison(condition, key);\r\n\t\t} else if (key === \"NOT\") {\r\n\t\t\tif (where.NOT === undefined) {\r\n\t\t\t\tthrow new InsightError(\"NOT condition is missing\");\r\n\t\t\t}\r\n\r\n\t\t\tconst notKeys = Object.keys(where.NOT);\r\n\t\t\tif (notKeys.length !== 1) {\r\n\t\t\t\tthrow new InsightError(\"NOT should only have 1 key\");\r\n\t\t\t}\r\n\t\t\tconst condition = where[key];\r\n\t\t\tif (condition === undefined) {\r\n\t\t\t\tthrow new InsightError(`${key} condition is missing`);\r\n\t\t\t}\r\n\t\t\tthis.checkWhere(condition);\r\n\t\t} else if (key === \"GT\" || key === \"LT\" || key === \"EQ\") {\r\n\t\t\tconst condition = where[key];\r\n\t\t\tif (condition === undefined) {\r\n\t\t\t\tthrow new InsightError(`${key} condition is missing`);\r\n\t\t\t}\r\n\t\t\tthis.checkComparisonOperatorNumber(condition);\r\n\t\t} else if (key === \"IS\") {\r\n\t\t\tconst condition = where[key];\r\n\t\t\tif (condition === undefined) {\r\n\t\t\t\tthrow new InsightError(`${key} condition is missing`);\r\n\t\t\t}\r\n\t\t\tthis.checkComparisonOperatorString(condition);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"Invalid WHERE condition\");\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate checkLogicComparison(filters: Filter[], key: string): boolean {\r\n\t\tif (!Array.isArray(filters) || filters.length === 0) {\r\n\t\t\tthrow new InsightError(\"Invalid Logical Comparison\");\r\n\t\t}\r\n\r\n\t\tfilters.forEach((filter) => {\r\n\t\t\tconst filterKeys = Object.keys(filter);\r\n\t\t\tif (filterKeys.length !== 1) {\r\n\t\t\t\tthrow new InsightError(`${key} condition should only have 1 key`);\r\n\t\t\t}\r\n\t\t\tthis.checkWhere(filter);\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate checkComparisonOperatorNumber(comparison: MComparison): boolean {\r\n\t\tconst keys = Object.keys(comparison);\r\n\t\tif (keys.length !== 1) {\r\n\t\t\tthrow new InsightError(\"Invalid Comparison Operator\");\r\n\t\t}\r\n\t\tconst key = keys[0];\r\n\t\tthis.checkKey(key, this.numberKeys);\r\n\t\tif (typeof comparison[key] !== \"number\") {\r\n\t\t\tthrow new InsightError(\"Invalid Comparison Operator\");\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate checkComparisonOperatorString(comparison: SComparison): boolean {\r\n\t\tconst keys = Object.keys(comparison);\r\n\t\tif (keys.length !== 1) {\r\n\t\t\tthrow new InsightError(\"Invalid Comparison Operator\");\r\n\t\t}\r\n\t\tconst key = keys[0];\r\n\t\tthis.checkKey(key, this.stringKeys);\r\n\t\tconst value: string = comparison[key];\r\n\r\n\t\tif (typeof value !== \"string\") {\r\n\t\t\tthrow new InsightError(\"Invalid Comparison Operator: Value is not a string\");\r\n\t\t}\r\n\r\n\t\tif (value === \"*\") {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (value === \"**\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst startsWithWildcard = value.startsWith(\"*\");\r\n\t\tconst endsWithWildcard = value.endsWith(\"*\");\r\n\t\tlet actualString = value;\r\n\r\n\t\tif (startsWithWildcard) {\r\n\t\t\tactualString = actualString.substring(1);\r\n\t\t}\r\n\t\tif (endsWithWildcard) {\r\n\t\t\tactualString = actualString.substring(0, actualString.length - 1);\r\n\t\t}\r\n\t\tif (actualString.length === 0 || actualString.includes(\"*\")) {\r\n\t\t\tthrow new InsightError(\"Invalid Comparison Operator: Invalid wildcard placement in string\");\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tprivate checkOptions(options: Options): void {\r\n\t\tif(!options.COLUMNS){\r\n\t\t\tthrow new InsightError(\"COLUMNS is null\");\r\n\t\t} else {\r\n\t\t\tthis.checkColumns(options.COLUMNS);\r\n\t\t} if(options.ORDER){\r\n\t\t\tthis.checkOrder(options.ORDER);\r\n\t\t}\r\n\t}\r\n\tprivate checkColumns(columns: Columns): boolean {\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tthis.checkKey(column, this.requireKeysDataset);\r\n\t\t\tthis.columnsKeyList.push(column);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\tprivate checkOrder(order: Order): boolean {\r\n\t\tif (typeof order === \"string\") {\r\n\t\t\tthis.checkKey(order, this.requireKeysDataset);\r\n\t\t\tif (!this.columnsKeyList.includes(order)) {\r\n\t\t\t\tthrow new InsightError(\"Order key not in columns\");\r\n\t\t\t}\r\n\t\t} else if (typeof order === \"object\") {\r\n\t\t\tconst {dir, keys} = order;\r\n\t\t\tif (!dir || ![\"UP\", \"DOWN\"].includes(dir)) {\r\n\t\t\t\tthrow new InsightError(\"Invalid direction in order\");\r\n\t\t\t}\r\n\t\t\tif (!keys || !Array.isArray(keys) || keys.length === 0) {\r\n\t\t\t\tthrow new InsightError(\"Invalid keys in order\");\r\n\t\t\t}\r\n\t\t\tkeys.forEach((key) => {\r\n\t\t\t\tthis.checkKey(key, this.requireKeysDataset);\r\n\t\t\t\tif (!this.columnsKeyList.includes(key)) {\r\n\t\t\t\t\tthrow new InsightError(`Order key ${key} not in columns`);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"Invalid order type\");\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate checkKey(key: string, keys: string[]): boolean {\r\n\t\tlet parts = key.split(\"_\");\r\n\r\n\t\tif(parts.length !== 2){\r\n\t\t\tthrow new InsightError(\"Key does not contain _\");\r\n\t\t}\r\n\r\n\t\tif(key.includes(\" \")){\r\n\t\t\tthrow new InsightError(\"Key contains space\");\r\n\t\t}\r\n\r\n\t\tlet [datasetName, keyFromDataset] = parts;\r\n\r\n\t\tif(!keys.includes(keyFromDataset)){\r\n\t\t\tthrow new InsightError(`Invalid key: ${keyFromDataset}`);\r\n\t\t}\r\n\r\n\t\tif(!this.datasetNameExists(datasetName)){\r\n\t\t\tthrow new InsightError(`Dataset ${datasetName} does not exist`);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate datasetNameExists(datasetName: string): boolean {\r\n\t\tif (this.dataSetsAccessed.includes(datasetName)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tconst existsInDatasets = this.datasets.some((dataset) => dataset.id === datasetName);\r\n\t\tif (existsInDatasets) {\r\n\t\t\tif (this.dataSetsAccessed.length > 0) {\r\n\t\t\t\tthrow new InsightError(\"Cannot access more than 1 dataset\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataSetsAccessed.push(datasetName);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3c672390de97efc2ca5c1f5781d45f37b76558c","contentHash":"5421a6bd97eda7358ac24bc5c84d6b98843ec38ccd9ed34db52bf37ea8a7ae14"},"C:\\Users\\vande\\source\\repos\\University\\CPSC 310\\project_team131\\src\\controller\\gettingQuery.ts":{"path":"C:\\Users\\vande\\source\\repos\\University\\CPSC 310\\project_team131\\src\\controller\\gettingQuery.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":25},"end":{"line":4,"column":110}},"2":{"start":{"line":5,"column":23},"end":{"line":5,"column":112}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":66}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":57}},"5":{"start":{"line":9,"column":28},"end":{"line":9,"column":39}},"6":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":48}},"8":{"start":{"line":13,"column":33},"end":{"line":13,"column":61}},"9":{"start":{"line":14,"column":30},"end":{"line":14,"column":32}},"10":{"start":{"line":15,"column":8},"end":{"line":21,"column":9}},"11":{"start":{"line":16,"column":12},"end":{"line":20,"column":13}},"12":{"start":{"line":17,"column":16},"end":{"line":17,"column":55}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":31}},"14":{"start":{"line":25,"column":26},"end":{"line":25,"column":28}},"15":{"start":{"line":26,"column":8},"end":{"line":37,"column":9}},"16":{"start":{"line":27,"column":12},"end":{"line":36,"column":13}},"17":{"start":{"line":28,"column":16},"end":{"line":35,"column":17}},"18":{"start":{"line":29,"column":39},"end":{"line":29,"column":55}},"19":{"start":{"line":30,"column":20},"end":{"line":34,"column":21}},"20":{"start":{"line":31,"column":24},"end":{"line":33,"column":25}},"21":{"start":{"line":32,"column":28},"end":{"line":32,"column":58}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":27}},"23":{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":42}},"25":{"start":{"line":43,"column":12},"end":{"line":43,"column":25}},"26":{"start":{"line":45,"column":8},"end":{"line":56,"column":9}},"27":{"start":{"line":46,"column":12},"end":{"line":46,"column":104}},"28":{"start":{"line":46,"column":57},"end":{"line":46,"column":102}},"29":{"start":{"line":48,"column":13},"end":{"line":56,"column":9}},"30":{"start":{"line":49,"column":12},"end":{"line":49,"column":102}},"31":{"start":{"line":49,"column":55},"end":{"line":49,"column":100}},"32":{"start":{"line":51,"column":13},"end":{"line":56,"column":9}},"33":{"start":{"line":52,"column":12},"end":{"line":52,"column":67}},"34":{"start":{"line":55,"column":12},"end":{"line":55,"column":63}},"35":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"36":{"start":{"line":60,"column":12},"end":{"line":60,"column":59}},"37":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"38":{"start":{"line":63,"column":12},"end":{"line":63,"column":59}},"39":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"40":{"start":{"line":66,"column":12},"end":{"line":66,"column":59}},"41":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"42":{"start":{"line":69,"column":12},"end":{"line":69,"column":59}},"43":{"start":{"line":71,"column":8},"end":{"line":71,"column":21}},"44":{"start":{"line":74,"column":29},"end":{"line":74,"column":58}},"45":{"start":{"line":75,"column":24},"end":{"line":75,"column":41}},"46":{"start":{"line":76,"column":26},"end":{"line":76,"column":46}},"47":{"start":{"line":77,"column":26},"end":{"line":77,"column":41}},"48":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"49":{"start":{"line":79,"column":12},"end":{"line":79,"column":75}},"50":{"start":{"line":81,"column":25},"end":{"line":81,"column":42}},"51":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"52":{"start":{"line":83,"column":12},"end":{"line":83,"column":70}},"53":{"start":{"line":85,"column":8},"end":{"line":85,"column":32}},"54":{"start":{"line":88,"column":29},"end":{"line":88,"column":58}},"55":{"start":{"line":89,"column":24},"end":{"line":89,"column":41}},"56":{"start":{"line":90,"column":26},"end":{"line":90,"column":46}},"57":{"start":{"line":91,"column":26},"end":{"line":91,"column":41}},"58":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"59":{"start":{"line":93,"column":12},"end":{"line":93,"column":75}},"60":{"start":{"line":95,"column":25},"end":{"line":95,"column":42}},"61":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"62":{"start":{"line":97,"column":12},"end":{"line":97,"column":70}},"63":{"start":{"line":99,"column":39},"end":{"line":99,"column":52}},"64":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"65":{"start":{"line":101,"column":12},"end":{"line":101,"column":73}},"66":{"start":{"line":103,"column":8},"end":{"line":103,"column":49}},"67":{"start":{"line":106,"column":29},"end":{"line":106,"column":58}},"68":{"start":{"line":107,"column":24},"end":{"line":107,"column":41}},"69":{"start":{"line":108,"column":26},"end":{"line":108,"column":46}},"70":{"start":{"line":109,"column":26},"end":{"line":109,"column":41}},"71":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"72":{"start":{"line":111,"column":12},"end":{"line":111,"column":75}},"73":{"start":{"line":113,"column":8},"end":{"line":125,"column":9}},"74":{"start":{"line":114,"column":43},"end":{"line":114,"column":56}},"75":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"76":{"start":{"line":116,"column":16},"end":{"line":116,"column":77}},"77":{"start":{"line":118,"column":12},"end":{"line":118,"column":56}},"78":{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},"79":{"start":{"line":121,"column":12},"end":{"line":121,"column":47}},"80":{"start":{"line":124,"column":12},"end":{"line":124,"column":85}},"81":{"start":{"line":128,"column":29},"end":{"line":128,"column":58}},"82":{"start":{"line":129,"column":24},"end":{"line":129,"column":41}},"83":{"start":{"line":130,"column":26},"end":{"line":130,"column":46}},"84":{"start":{"line":131,"column":26},"end":{"line":131,"column":49}},"85":{"start":{"line":132,"column":8},"end":{"line":146,"column":9}},"86":{"start":{"line":133,"column":33},"end":{"line":133,"column":51}},"87":{"start":{"line":134,"column":12},"end":{"line":134,"column":52}},"88":{"start":{"line":136,"column":13},"end":{"line":146,"column":9}},"89":{"start":{"line":137,"column":33},"end":{"line":137,"column":47}},"90":{"start":{"line":138,"column":12},"end":{"line":138,"column":52}},"91":{"start":{"line":140,"column":13},"end":{"line":146,"column":9}},"92":{"start":{"line":141,"column":33},"end":{"line":141,"column":51}},"93":{"start":{"line":142,"column":12},"end":{"line":142,"column":54}},"94":{"start":{"line":145,"column":12},"end":{"line":145,"column":39}},"95":{"start":{"line":149,"column":24},"end":{"line":149,"column":37}},"96":{"start":{"line":150,"column":32},"end":{"line":150,"column":112}},"97":{"start":{"line":150,"column":58},"end":{"line":150,"column":111}},"98":{"start":{"line":151,"column":33},"end":{"line":151,"column":96}},"99":{"start":{"line":151,"column":67},"end":{"line":151,"column":94}},"100":{"start":{"line":152,"column":8},"end":{"line":155,"column":9}},"101":{"start":{"line":153,"column":35},"end":{"line":153,"column":83}},"102":{"start":{"line":154,"column":12},"end":{"line":154,"column":74}},"103":{"start":{"line":154,"column":68},"end":{"line":154,"column":72}},"104":{"start":{"line":156,"column":8},"end":{"line":156,"column":31}},"105":{"start":{"line":159,"column":8},"end":{"line":198,"column":9}},"106":{"start":{"line":160,"column":12},"end":{"line":175,"column":15}},"107":{"start":{"line":161,"column":29},"end":{"line":161,"column":37}},"108":{"start":{"line":162,"column":29},"end":{"line":162,"column":37}},"109":{"start":{"line":163,"column":16},"end":{"line":173,"column":17}},"110":{"start":{"line":164,"column":20},"end":{"line":166,"column":21}},"111":{"start":{"line":165,"column":24},"end":{"line":165,"column":43}},"112":{"start":{"line":168,"column":21},"end":{"line":173,"column":17}},"113":{"start":{"line":169,"column":39},"end":{"line":169,"column":63}},"114":{"start":{"line":170,"column":20},"end":{"line":172,"column":21}},"115":{"start":{"line":171,"column":24},"end":{"line":171,"column":42}},"116":{"start":{"line":174,"column":16},"end":{"line":174,"column":53}},"117":{"start":{"line":178,"column":34},"end":{"line":178,"column":39}},"118":{"start":{"line":179,"column":40},"end":{"line":179,"column":61}},"119":{"start":{"line":180,"column":12},"end":{"line":197,"column":15}},"120":{"start":{"line":181,"column":16},"end":{"line":195,"column":17}},"121":{"start":{"line":182,"column":33},"end":{"line":182,"column":39}},"122":{"start":{"line":183,"column":33},"end":{"line":183,"column":39}},"123":{"start":{"line":184,"column":20},"end":{"line":194,"column":21}},"124":{"start":{"line":185,"column":24},"end":{"line":187,"column":25}},"125":{"start":{"line":186,"column":28},"end":{"line":186,"column":71}},"126":{"start":{"line":189,"column":25},"end":{"line":194,"column":21}},"127":{"start":{"line":190,"column":43},"end":{"line":190,"column":67}},"128":{"start":{"line":191,"column":24},"end":{"line":193,"column":25}},"129":{"start":{"line":192,"column":28},"end":{"line":192,"column":68}},"130":{"start":{"line":196,"column":16},"end":{"line":196,"column":53}},"131":{"start":{"line":201,"column":31},"end":{"line":201,"column":33}},"132":{"start":{"line":202,"column":8},"end":{"line":243,"column":9}},"133":{"start":{"line":203,"column":28},"end":{"line":203,"column":48}},"134":{"start":{"line":204,"column":30},"end":{"line":204,"column":50}},"135":{"start":{"line":205,"column":12},"end":{"line":242,"column":13}},"136":{"start":{"line":206,"column":28},"end":{"line":206,"column":45}},"137":{"start":{"line":207,"column":16},"end":{"line":238,"column":17}},"138":{"start":{"line":208,"column":20},"end":{"line":215,"column":21}},"139":{"start":{"line":209,"column":24},"end":{"line":214,"column":25}},"140":{"start":{"line":210,"column":28},"end":{"line":210,"column":50}},"141":{"start":{"line":213,"column":28},"end":{"line":213,"column":92}},"142":{"start":{"line":216,"column":20},"end":{"line":221,"column":21}},"143":{"start":{"line":217,"column":24},"end":{"line":217,"column":55}},"144":{"start":{"line":220,"column":24},"end":{"line":220,"column":94}},"145":{"start":{"line":223,"column":21},"end":{"line":238,"column":17}},"146":{"start":{"line":224,"column":20},"end":{"line":231,"column":21}},"147":{"start":{"line":225,"column":24},"end":{"line":230,"column":25}},"148":{"start":{"line":226,"column":28},"end":{"line":226,"column":50}},"149":{"start":{"line":229,"column":28},"end":{"line":229,"column":92}},"150":{"start":{"line":232,"column":20},"end":{"line":237,"column":21}},"151":{"start":{"line":233,"column":24},"end":{"line":233,"column":55}},"152":{"start":{"line":236,"column":24},"end":{"line":236,"column":94}},"153":{"start":{"line":241,"column":16},"end":{"line":241,"column":59}},"154":{"start":{"line":244,"column":8},"end":{"line":244,"column":30}},"155":{"start":{"line":247,"column":22},"end":{"line":247,"column":62}},"156":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"157":{"start":{"line":249,"column":12},"end":{"line":249,"column":24}},"158":{"start":{"line":251,"column":8},"end":{"line":251,"column":44}},"159":{"start":{"line":254,"column":0},"end":{"line":254,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":31},"end":{"line":23,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":28},"end":{"line":39,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":42},"end":{"line":57,"column":5}},"line":40},"3":{"name":"(anonymous_3)","decl":{"start":{"line":46,"column":39},"end":{"line":46,"column":40}},"loc":{"start":{"line":46,"column":57},"end":{"line":46,"column":102}},"line":46},"4":{"name":"(anonymous_4)","decl":{"start":{"line":49,"column":37},"end":{"line":49,"column":38}},"loc":{"start":{"line":49,"column":55},"end":{"line":49,"column":100}},"line":49},"5":{"name":"(anonymous_5)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":44},"end":{"line":72,"column":5}},"line":58},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":34},"end":{"line":86,"column":5}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":34},"end":{"line":104,"column":5}},"line":87},"8":{"name":"(anonymous_8)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":34},"end":{"line":126,"column":5}},"line":105},"9":{"name":"(anonymous_9)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":34},"end":{"line":147,"column":5}},"line":127},"10":{"name":"(anonymous_10)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":32},"end":{"line":157,"column":5}},"line":148},"11":{"name":"(anonymous_11)","decl":{"start":{"line":150,"column":43},"end":{"line":150,"column":44}},"loc":{"start":{"line":150,"column":58},"end":{"line":150,"column":111}},"line":150},"12":{"name":"(anonymous_12)","decl":{"start":{"line":151,"column":53},"end":{"line":151,"column":54}},"loc":{"start":{"line":151,"column":67},"end":{"line":151,"column":94}},"line":151},"13":{"name":"(anonymous_13)","decl":{"start":{"line":154,"column":38},"end":{"line":154,"column":39}},"loc":{"start":{"line":154,"column":68},"end":{"line":154,"column":72}},"line":154},"14":{"name":"(anonymous_14)","decl":{"start":{"line":158,"column":4},"end":{"line":158,"column":5}},"loc":{"start":{"line":158,"column":30},"end":{"line":199,"column":5}},"line":158},"15":{"name":"(anonymous_15)","decl":{"start":{"line":160,"column":31},"end":{"line":160,"column":32}},"loc":{"start":{"line":160,"column":41},"end":{"line":175,"column":13}},"line":160},"16":{"name":"(anonymous_16)","decl":{"start":{"line":180,"column":31},"end":{"line":180,"column":32}},"loc":{"start":{"line":180,"column":41},"end":{"line":197,"column":13}},"line":180},"17":{"name":"(anonymous_17)","decl":{"start":{"line":200,"column":4},"end":{"line":200,"column":5}},"loc":{"start":{"line":200,"column":34},"end":{"line":245,"column":5}},"line":200},"18":{"name":"(anonymous_18)","decl":{"start":{"line":246,"column":4},"end":{"line":246,"column":5}},"loc":{"start":{"line":246,"column":20},"end":{"line":252,"column":5}},"line":246}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},{"start":{"line":10,"column":8},"end":{"line":12,"column":9}}],"line":10},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":20,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":20,"column":13}},{"start":{"line":16,"column":12},"end":{"line":20,"column":13}}],"line":16},"2":{"loc":{"start":{"line":28,"column":16},"end":{"line":35,"column":17}},"type":"if","locations":[{"start":{"line":28,"column":16},"end":{"line":35,"column":17}},{"start":{"line":28,"column":16},"end":{"line":35,"column":17}}],"line":28},"3":{"loc":{"start":{"line":30,"column":20},"end":{"line":34,"column":21}},"type":"if","locations":[{"start":{"line":30,"column":20},"end":{"line":34,"column":21}},{"start":{"line":30,"column":20},"end":{"line":34,"column":21}}],"line":30},"4":{"loc":{"start":{"line":30,"column":24},"end":{"line":30,"column":109}},"type":"binary-expr","locations":[{"start":{"line":30,"column":24},"end":{"line":30,"column":41}},{"start":{"line":30,"column":45},"end":{"line":30,"column":77}},{"start":{"line":30,"column":81},"end":{"line":30,"column":109}}],"line":30},"5":{"loc":{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},{"start":{"line":41,"column":8},"end":{"line":44,"column":9}}],"line":41},"6":{"loc":{"start":{"line":45,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":56,"column":9}},{"start":{"line":45,"column":8},"end":{"line":56,"column":9}}],"line":45},"7":{"loc":{"start":{"line":48,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":13},"end":{"line":56,"column":9}},{"start":{"line":48,"column":13},"end":{"line":56,"column":9}}],"line":48},"8":{"loc":{"start":{"line":51,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":13},"end":{"line":56,"column":9}},{"start":{"line":51,"column":13},"end":{"line":56,"column":9}}],"line":51},"9":{"loc":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},{"start":{"line":59,"column":8},"end":{"line":61,"column":9}}],"line":59},"10":{"loc":{"start":{"line":59,"column":12},"end":{"line":59,"column":47}},"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":30}},{"start":{"line":59,"column":34},"end":{"line":59,"column":47}}],"line":59},"11":{"loc":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},{"start":{"line":62,"column":8},"end":{"line":64,"column":9}}],"line":62},"12":{"loc":{"start":{"line":62,"column":12},"end":{"line":62,"column":47}},"type":"binary-expr","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":30}},{"start":{"line":62,"column":34},"end":{"line":62,"column":47}}],"line":62},"13":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"14":{"loc":{"start":{"line":65,"column":12},"end":{"line":65,"column":47}},"type":"binary-expr","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":30}},{"start":{"line":65,"column":34},"end":{"line":65,"column":47}}],"line":65},"15":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"16":{"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":47}},"type":"binary-expr","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":30}},{"start":{"line":68,"column":34},"end":{"line":68,"column":47}}],"line":68},"17":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78},"18":{"loc":{"start":{"line":78,"column":12},"end":{"line":78,"column":57}},"type":"binary-expr","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":35}},{"start":{"line":78,"column":39},"end":{"line":78,"column":57}}],"line":78},"19":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{"line":82,"column":8},"end":{"line":84,"column":9}}],"line":82},"20":{"loc":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},{"start":{"line":92,"column":8},"end":{"line":94,"column":9}}],"line":92},"21":{"loc":{"start":{"line":92,"column":12},"end":{"line":92,"column":57}},"type":"binary-expr","locations":[{"start":{"line":92,"column":12},"end":{"line":92,"column":35}},{"start":{"line":92,"column":39},"end":{"line":92,"column":57}}],"line":92},"22":{"loc":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},{"start":{"line":96,"column":8},"end":{"line":98,"column":9}}],"line":96},"23":{"loc":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},{"start":{"line":100,"column":8},"end":{"line":102,"column":9}}],"line":100},"24":{"loc":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},{"start":{"line":110,"column":8},"end":{"line":112,"column":9}}],"line":110},"25":{"loc":{"start":{"line":110,"column":12},"end":{"line":110,"column":57}},"type":"binary-expr","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":35}},{"start":{"line":110,"column":39},"end":{"line":110,"column":57}}],"line":110},"26":{"loc":{"start":{"line":113,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":125,"column":9}},{"start":{"line":113,"column":8},"end":{"line":125,"column":9}}],"line":113},"27":{"loc":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},{"start":{"line":115,"column":12},"end":{"line":117,"column":13}}],"line":115},"28":{"loc":{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},{"start":{"line":120,"column":13},"end":{"line":125,"column":9}}],"line":120},"29":{"loc":{"start":{"line":132,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":146,"column":9}},{"start":{"line":132,"column":8},"end":{"line":146,"column":9}}],"line":132},"30":{"loc":{"start":{"line":132,"column":12},"end":{"line":132,"column":56}},"type":"binary-expr","locations":[{"start":{"line":132,"column":12},"end":{"line":132,"column":33}},{"start":{"line":132,"column":37},"end":{"line":132,"column":56}}],"line":132},"31":{"loc":{"start":{"line":136,"column":13},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":13},"end":{"line":146,"column":9}},{"start":{"line":136,"column":13},"end":{"line":146,"column":9}}],"line":136},"32":{"loc":{"start":{"line":140,"column":13},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":13},"end":{"line":146,"column":9}},{"start":{"line":140,"column":13},"end":{"line":146,"column":9}}],"line":140},"33":{"loc":{"start":{"line":152,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":155,"column":9}},{"start":{"line":152,"column":8},"end":{"line":155,"column":9}}],"line":152},"34":{"loc":{"start":{"line":159,"column":8},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":198,"column":9}},{"start":{"line":159,"column":8},"end":{"line":198,"column":9}}],"line":159},"35":{"loc":{"start":{"line":163,"column":16},"end":{"line":173,"column":17}},"type":"if","locations":[{"start":{"line":163,"column":16},"end":{"line":173,"column":17}},{"start":{"line":163,"column":16},"end":{"line":173,"column":17}}],"line":163},"36":{"loc":{"start":{"line":163,"column":20},"end":{"line":163,"column":72}},"type":"binary-expr","locations":[{"start":{"line":163,"column":20},"end":{"line":163,"column":44}},{"start":{"line":163,"column":48},"end":{"line":163,"column":72}}],"line":163},"37":{"loc":{"start":{"line":164,"column":20},"end":{"line":166,"column":21}},"type":"if","locations":[{"start":{"line":164,"column":20},"end":{"line":166,"column":21}},{"start":{"line":164,"column":20},"end":{"line":166,"column":21}}],"line":164},"38":{"loc":{"start":{"line":168,"column":21},"end":{"line":173,"column":17}},"type":"if","locations":[{"start":{"line":168,"column":21},"end":{"line":173,"column":17}},{"start":{"line":168,"column":21},"end":{"line":173,"column":17}}],"line":168},"39":{"loc":{"start":{"line":168,"column":25},"end":{"line":168,"column":77}},"type":"binary-expr","locations":[{"start":{"line":168,"column":25},"end":{"line":168,"column":49}},{"start":{"line":168,"column":53},"end":{"line":168,"column":77}}],"line":168},"40":{"loc":{"start":{"line":170,"column":20},"end":{"line":172,"column":21}},"type":"if","locations":[{"start":{"line":170,"column":20},"end":{"line":172,"column":21}},{"start":{"line":170,"column":20},"end":{"line":172,"column":21}}],"line":170},"41":{"loc":{"start":{"line":179,"column":40},"end":{"line":179,"column":61}},"type":"cond-expr","locations":[{"start":{"line":179,"column":55},"end":{"line":179,"column":56}},{"start":{"line":179,"column":59},"end":{"line":179,"column":61}}],"line":179},"42":{"loc":{"start":{"line":184,"column":20},"end":{"line":194,"column":21}},"type":"if","locations":[{"start":{"line":184,"column":20},"end":{"line":194,"column":21}},{"start":{"line":184,"column":20},"end":{"line":194,"column":21}}],"line":184},"43":{"loc":{"start":{"line":184,"column":24},"end":{"line":184,"column":76}},"type":"binary-expr","locations":[{"start":{"line":184,"column":24},"end":{"line":184,"column":48}},{"start":{"line":184,"column":52},"end":{"line":184,"column":76}}],"line":184},"44":{"loc":{"start":{"line":185,"column":24},"end":{"line":187,"column":25}},"type":"if","locations":[{"start":{"line":185,"column":24},"end":{"line":187,"column":25}},{"start":{"line":185,"column":24},"end":{"line":187,"column":25}}],"line":185},"45":{"loc":{"start":{"line":189,"column":25},"end":{"line":194,"column":21}},"type":"if","locations":[{"start":{"line":189,"column":25},"end":{"line":194,"column":21}},{"start":{"line":189,"column":25},"end":{"line":194,"column":21}}],"line":189},"46":{"loc":{"start":{"line":189,"column":29},"end":{"line":189,"column":81}},"type":"binary-expr","locations":[{"start":{"line":189,"column":29},"end":{"line":189,"column":53}},{"start":{"line":189,"column":57},"end":{"line":189,"column":81}}],"line":189},"47":{"loc":{"start":{"line":191,"column":24},"end":{"line":193,"column":25}},"type":"if","locations":[{"start":{"line":191,"column":24},"end":{"line":193,"column":25}},{"start":{"line":191,"column":24},"end":{"line":193,"column":25}}],"line":191},"48":{"loc":{"start":{"line":205,"column":12},"end":{"line":242,"column":13}},"type":"if","locations":[{"start":{"line":205,"column":12},"end":{"line":242,"column":13}},{"start":{"line":205,"column":12},"end":{"line":242,"column":13}}],"line":205},"49":{"loc":{"start":{"line":205,"column":16},"end":{"line":205,"column":48}},"type":"binary-expr","locations":[{"start":{"line":205,"column":16},"end":{"line":205,"column":25}},{"start":{"line":205,"column":29},"end":{"line":205,"column":48}}],"line":205},"50":{"loc":{"start":{"line":207,"column":16},"end":{"line":238,"column":17}},"type":"if","locations":[{"start":{"line":207,"column":16},"end":{"line":238,"column":17}},{"start":{"line":207,"column":16},"end":{"line":238,"column":17}}],"line":207},"51":{"loc":{"start":{"line":208,"column":20},"end":{"line":215,"column":21}},"type":"if","locations":[{"start":{"line":208,"column":20},"end":{"line":215,"column":21}},{"start":{"line":208,"column":20},"end":{"line":215,"column":21}}],"line":208},"52":{"loc":{"start":{"line":216,"column":20},"end":{"line":221,"column":21}},"type":"if","locations":[{"start":{"line":216,"column":20},"end":{"line":221,"column":21}},{"start":{"line":216,"column":20},"end":{"line":221,"column":21}}],"line":216},"53":{"loc":{"start":{"line":223,"column":21},"end":{"line":238,"column":17}},"type":"if","locations":[{"start":{"line":223,"column":21},"end":{"line":238,"column":17}},{"start":{"line":223,"column":21},"end":{"line":238,"column":17}}],"line":223},"54":{"loc":{"start":{"line":224,"column":20},"end":{"line":231,"column":21}},"type":"if","locations":[{"start":{"line":224,"column":20},"end":{"line":231,"column":21}},{"start":{"line":224,"column":20},"end":{"line":231,"column":21}}],"line":224},"55":{"loc":{"start":{"line":232,"column":20},"end":{"line":237,"column":21}},"type":"if","locations":[{"start":{"line":232,"column":20},"end":{"line":237,"column":21}},{"start":{"line":232,"column":20},"end":{"line":237,"column":21}}],"line":232},"56":{"loc":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},{"start":{"line":248,"column":8},"end":{"line":250,"column":9}}],"line":248}},"s":{"0":1,"1":110,"2":110,"3":110,"4":110,"5":36,"6":36,"7":1,"8":35,"9":35,"10":35,"11":2261420,"12":70369,"13":35,"14":36,"15":36,"16":36,"17":213984,"18":213984,"19":213984,"20":129204,"21":2326032,"22":36,"23":8029342,"24":0,"25":0,"26":8029342,"27":1351971,"28":1561930,"29":6677371,"30":1292270,"31":3620260,"32":5385101,"33":585732,"34":4799369,"35":4799369,"36":2184094,"37":2615275,"38":268212,"39":2347063,"40":1017748,"41":1329315,"42":1329315,"43":0,"44":2184094,"45":2184094,"46":2184094,"47":2184094,"48":2184094,"49":0,"50":2184094,"51":2184094,"52":0,"53":2184094,"54":268212,"55":268212,"56":268212,"57":268212,"58":268212,"59":0,"60":268212,"61":268212,"62":0,"63":268212,"64":268212,"65":0,"66":268212,"67":1017748,"68":1017748,"69":1017748,"70":1017748,"71":1017748,"72":0,"73":1017748,"74":1017748,"75":1017748,"76":0,"77":1017748,"78":0,"79":0,"80":0,"81":1329315,"82":1329315,"83":1329315,"84":1329315,"85":1329315,"86":441350,"87":441350,"88":887965,"89":129224,"90":129224,"91":758741,"92":535694,"93":535694,"94":223047,"95":34,"96":34,"97":5757,"98":34,"99":5757,"100":34,"101":32,"102":32,"103":5751,"104":2,"105":32,"106":32,"107":8260,"108":8260,"109":8260,"110":3255,"111":2574,"112":5005,"113":5005,"114":5005,"115":39,"116":5647,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":5757,"132":5757,"133":7848,"134":7848,"135":7848,"136":7848,"137":7848,"138":6364,"139":32,"140":32,"141":0,"142":6364,"143":6364,"144":0,"145":1484,"146":1484,"147":265,"148":265,"149":0,"150":1484,"151":1484,"152":0,"153":0,"154":5757,"155":4807217,"156":4807217,"157":0,"158":4807217,"159":1},"f":{"0":36,"1":36,"2":8029342,"3":1561930,"4":3620260,"5":4799369,"6":2184094,"7":268212,"8":1017748,"9":1329315,"10":34,"11":5757,"12":5757,"13":5751,"14":32,"15":8260,"16":0,"17":5757,"18":4807217},"b":{"0":[1,35],"1":[70369,2191051],"2":[213984,0],"3":[129204,84780],"4":[213984,213984,213984],"5":[0,8029342],"6":[1351971,6677371],"7":[1292270,5385101],"8":[585732,4799369],"9":[2184094,2615275],"10":[4799369,2184094],"11":[268212,2347063],"12":[2615275,268212],"13":[1017748,1329315],"14":[2347063,1017748],"15":[1329315,0],"16":[1329315,1329315],"17":[0,2184094],"18":[2184094,2184094],"19":[0,2184094],"20":[0,268212],"21":[268212,268212],"22":[0,268212],"23":[0,268212],"24":[0,1017748],"25":[1017748,1017748],"26":[1017748,0],"27":[0,1017748],"28":[0,0],"29":[441350,887965],"30":[1329315,570574],"31":[129224,758741],"32":[535694,223047],"33":[32,2],"34":[32,0],"35":[3255,5005],"36":[8260,3255],"37":[2574,681],"38":[5005,0],"39":[5005,5005],"40":[39,4966],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[7848,0],"49":[7848,7848],"50":[6364,1484],"51":[32,6332],"52":[6364,0],"53":[1484,0],"54":[265,1219],"55":[1484,0],"56":[0,4807217]},"inputSourceMap":{"version":3,"file":"C:/Users/vande/source/repos/University/CPSC 310/project_team131/src/controller/gettingQuery.ts","sources":["C:/Users/vande/source/repos/University/CPSC 310/project_team131/src/controller/gettingQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import {Columns, Filter, MComparison, Options, Order, Query, SComparison, Where} from \"../interfaces/queryTypes\";\r\nimport {InsightDataset, InsightError, InsightResult, ResultTooLargeError} from \"./IInsightFacade\";\r\nimport {ExtractedContent, CourseData, CourseSection, SectionsContainer} from \"../interfaces/datasetType\";\r\n\r\nexport default class GettingQuery{\r\n\tprivate requireKeysDataset = [\"uuid\", \"id\", \"title\", \"instructor\",\"dept\", \"year\", \"avg\", \"pass\", \"fail\", \"audit\"];\r\n\tprivate requiredKeysFile = [\"id\",\"Course\",\"Title\",\"Professor\",\"Subject\",\"Year\", \"Avg\", \"Pass\", \"Fail\", \"Audit\"];\r\n\tprivate stringKeys = [\"id\", \"Course\", \"Title\", \"Professor\", \"Subject\"];\r\n\tprivate numberKeys = [\"Year\", \"Avg\", \"Pass\", \"Fail\", \"Audit\"];\r\n\tpublic applyWhere(query: Query, dataset: ExtractedContent[]): SectionsContainer[] {\r\n\t\tconst whereClause = query.WHERE;\r\n\r\n\t\tif (Object.keys(whereClause).length === 0) {\r\n\t\t\treturn this.flattenResults(dataset);\r\n\t\t}\r\n\r\n\t\tconst flattenedResults = this.flattenResults(dataset);\r\n\r\n\t\tlet filteredResults: SectionsContainer[] = [];\r\n\r\n\t\tfor (const sectionContainer of flattenedResults) {\r\n\t\t\tif (this.satisfiesCondition(sectionContainer.section, whereClause)) {\r\n\t\t\t\tfilteredResults.push(sectionContainer);\r\n\t\t\t} else {\r\n\t\t\t\t// Should not reach here\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn filteredResults;\r\n\t}\r\n\r\n\r\n\tprivate flattenResults(dataset: ExtractedContent[]): SectionsContainer[] {\r\n\t\tlet allSections: SectionsContainer[] = [];\r\n\t\tfor (const data of dataset) {\r\n\t\t\tfor (const coursePath in data) {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(data, coursePath)) {\r\n\t\t\t\t\tconst courseData: CourseData = data[coursePath];\r\n\t\t\t\t\tif (courseData.result && Array.isArray(courseData.result) && courseData.result.length > 0) {\r\n\t\t\t\t\t\tfor (const section of courseData.result) {\r\n\t\t\t\t\t\t\tallSections.push({section});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn allSections;\r\n\t}\r\n\r\n\tprivate satisfiesCondition(record: CourseSection, condition: Where): boolean {\r\n\t\tif(!record){\r\n\t\t\tconsole.log(\"record is null\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (condition.AND) {\r\n\t\t\treturn condition.AND.every((subCondition) => this.satisfiesCondition(record, subCondition));\r\n\t\t} else if (condition.OR) {\r\n\t\t\treturn condition.OR.some((subCondition) => this.satisfiesCondition(record, subCondition));\r\n\t\t} else if (condition.NOT) {\r\n\t\t\treturn !this.satisfiesCondition(record, condition.NOT);\r\n\t\t} else {\r\n\t\t\treturn this.satisfiesComparison(record, condition);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate satisfiesComparison(record: CourseSection, comparison: Filter): boolean {\r\n\t\tif (\"GT\" in comparison && comparison.GT) {\r\n\t\t\treturn this.satisfiesGT(record, comparison.GT);\r\n\t\t}\r\n\t\tif (\"LT\" in comparison && comparison.LT) {\r\n\t\t\treturn this.satisfiesLT(record, comparison.LT);\r\n\t\t}\r\n\t\tif (\"EQ\" in comparison && comparison.EQ) {\r\n\t\t\treturn this.satisfiesEQ(record, comparison.EQ);\r\n\t\t}\r\n\t\tif (\"IS\" in comparison && comparison.IS) {\r\n\t\t\treturn this.satisfiesIS(record, comparison.IS);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate satisfiesGT(item: CourseSection, comparison: MComparison): boolean {\r\n\t\tconst [key, value] = Object.entries(comparison)[0];\r\n\t\tconst keyPart = key.split(\"_\")[1];\r\n\t\tconst mappedKey = this.mapKey(keyPart);\r\n\t\tconst itemValue = item[mappedKey as keyof CourseSection];\r\n\r\n\t\tif (itemValue === undefined || itemValue === null) {\r\n\t\t\tthrow new Error(`Value for ${mappedKey} is undefined or null`);\r\n\t\t}\r\n\r\n\t\tconst numValue = Number(itemValue);\r\n\r\n\t\tif (isNaN(numValue)) {\r\n\t\t\tthrow new Error(`Value for ${mappedKey} is not a number`);\r\n\t\t}\r\n\t\treturn numValue > value;\r\n\t}\r\n\r\n\tprivate satisfiesLT(item: CourseSection, comparison: MComparison): boolean {\r\n\t\tconst [key, value] = Object.entries(comparison)[0];\r\n\t\tconst keyPart = key.split(\"_\")[1];\r\n\t\tconst mappedKey = this.mapKey(keyPart);\r\n\t\tconst itemValue = item[mappedKey as keyof CourseSection];\r\n\r\n\t\tif (itemValue === undefined || itemValue === null) {\r\n\t\t\tthrow new Error(`Value for ${mappedKey} is undefined or null`);\r\n\t\t}\r\n\r\n\t\tconst numValue = Number(itemValue);\r\n\r\n\t\tif (isNaN(numValue)) {\r\n\t\t\tthrow new Error(`Value for ${mappedKey} is not a number`);\r\n\t\t}\r\n\r\n\t\tconst numericComparisonValue = Number(value);\r\n\t\tif (isNaN(numericComparisonValue)) {\r\n\t\t\tthrow new Error(`Comparison value ${value} is not a number`);\r\n\t\t}\r\n\t\treturn numValue < numericComparisonValue;\r\n\t}\r\n\r\n\r\n\tprivate satisfiesEQ(item: CourseSection, comparison: MComparison): boolean {\r\n\t\tconst [key, value] = Object.entries(comparison)[0];\r\n\t\tconst keyPart = key.split(\"_\")[1];\r\n\t\tconst mappedKey = this.mapKey(keyPart);\r\n\t\tconst itemValue = item[mappedKey as keyof CourseSection];\r\n\r\n\t\tif (itemValue === undefined || itemValue === null) {\r\n\t\t\tthrow new Error(`Value for ${mappedKey} is undefined or null`);\r\n\t\t}\r\n\r\n\t\tif (typeof itemValue === \"number\") {\r\n\t\t\tconst numericComparisonValue = Number(value);\r\n\t\t\tif (isNaN(numericComparisonValue)) {\r\n\t\t\t\tthrow new Error(`Comparison value ${value} is not a number`);\r\n\t\t\t}\r\n\t\t\treturn itemValue === numericComparisonValue;\r\n\t\t} else if (typeof itemValue === \"string\") {\r\n\t\t\treturn itemValue === String(value);\r\n\t\t} else {\r\n\t\t\tthrow new Error(`Unexpected type for ${mappedKey}: ${typeof itemValue}`);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate satisfiesIS(item: CourseSection, comparison: SComparison): boolean {\r\n\t\tconst [key, value] = Object.entries(comparison)[0];\r\n\t\tconst keyPart = key.split(\"_\")[1];\r\n\t\tconst mappedKey = this.mapKey(keyPart);\r\n\t\tconst itemValue = String(item[mappedKey as keyof CourseSection]);\r\n\t\tif (value.startsWith(\"*\") && value.endsWith(\"*\")) {\r\n\t\t\tconst actualString = value.slice(1, -1);\r\n\t\t\treturn itemValue.includes(actualString);\r\n\t\t} else if (value.startsWith(\"*\")) {\r\n\t\t\tconst actualString = value.slice(1);\r\n\t\t\treturn itemValue.endsWith(actualString);\r\n\t\t} else if (value.endsWith(\"*\")) {\r\n\t\t\tconst actualString = value.slice(0, -1);\r\n\t\t\treturn itemValue.startsWith(actualString);\r\n\t\t} else {\r\n\t\t\treturn itemValue === value;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic applyOptions(query: Query, result: SectionsContainer[]): InsightResult[] {\r\n\t\tconst options = query.OPTIONS;\r\n\r\n\t\tconst selectedResults: InsightResult[] = result.map((container) =>\r\n\t\t\tthis.applyColumns(container.section, options.COLUMNS)\r\n\t\t);\r\n\r\n\r\n\t\tconst augmentedResults = selectedResults.map((el, idx) => ({...el, originalIdx: idx}));\r\n\r\n\t\tif (options.ORDER) {\r\n\t\t\tconst orderedResults = this.applyOrder(augmentedResults, options.ORDER);\r\n\t\t\treturn orderedResults.map(({originalIdx, ...rest}) => rest);\r\n\t\t}\r\n\r\n\t\treturn selectedResults;\r\n\t}\r\n\r\n\r\n\tprivate applyOrder(result: InsightResult[], order: Order | string): InsightResult[] {\r\n\t\tif (typeof order === \"string\") {\r\n\t\t\treturn result.sort((a, b) => {\r\n\t\t\t\tconst valA = a[order];\r\n\t\t\t\tconst valB = b[order];\r\n\r\n\t\t\t\tif (typeof valA === \"number\" && typeof valB === \"number\") {\r\n\t\t\t\t\tif (valA !== valB) {\r\n\t\t\t\t\t\treturn valA - valB;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (typeof valA === \"string\" && typeof valB === \"string\") {\r\n\t\t\t\t\tconst comparison = valA.localeCompare(valB);\r\n\t\t\t\t\tif (comparison !== 0) {\r\n\t\t\t\t\t\treturn comparison;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (a as any).originalIdx - (b as any).originalIdx;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst {dir, keys} = order;\r\n\t\t\tconst directionMultiplier = dir === \"UP\" ? 1 : -1;\r\n\t\t\treturn result.sort((a, b) => {\r\n\t\t\t\tfor (const key of keys) {\r\n\t\t\t\t\tconst valA = a[key];\r\n\t\t\t\t\tconst valB = b[key];\r\n\r\n\t\t\t\t\tif (typeof valA === \"number\" && typeof valB === \"number\") {\r\n\t\t\t\t\t\tif (valA !== valB) {\r\n\t\t\t\t\t\t\treturn (valA - valB) * directionMultiplier;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (typeof valA === \"string\" && typeof valB === \"string\") {\r\n\t\t\t\t\t\tconst comparison = valA.localeCompare(valB);\r\n\t\t\t\t\t\tif (comparison !== 0) {\r\n\t\t\t\t\t\t\treturn comparison * directionMultiplier;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn (a as any).originalIdx - (b as any).originalIdx;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprivate applyColumns(record: CourseSection, columns: Columns): InsightResult {\r\n\t\tconst selectedRecord: InsightResult = {};\r\n\t\tfor (const column of columns) {\r\n\t\t\tconst keyPart = column.split(\"_\")[1];\r\n\t\t\tconst mappedKey = this.mapKey(keyPart);\r\n\r\n\t\t\tif (mappedKey && mappedKey in record) {\r\n\t\t\t\tlet value = record[mappedKey];\r\n\r\n\t\t\t\tif (this.stringKeys.includes(mappedKey)) {\r\n\t\t\t\t\tif (typeof value !== \"string\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvalue = String(value);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole.error(`Failed to convert ${mappedKey} to string: ${e}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (typeof value === \"string\") {\r\n\t\t\t\t\t\tselectedRecord[column] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(`TypeErr: ${mappedKey}. Exp:str, got:${typeof value}.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.numberKeys.includes(mappedKey)) {\r\n\t\t\t\t\tif (typeof value !== \"number\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvalue = Number(value);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole.error(`Failed to convert ${mappedKey} to number: ${e}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (typeof value === \"number\") {\r\n\t\t\t\t\t\tselectedRecord[column] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(`TypeErr: ${mappedKey}. Exp:num, got:${typeof value}.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(`Invalid column: ${column}`);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn selectedRecord;\r\n\t}\r\n\tprivate mapKey(fromKey: string): string | null {\r\n\t\tconst index = this.requireKeysDataset.indexOf(fromKey);\r\n\t\tif (index === -1) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.requiredKeysFile[index];\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"584bb4cc7cd82662e0282d245274a6ef0c3c6599","contentHash":"ec195a2e1c5819810bdfcdf4b348aab462fc762a6cbe8aaa3004e54f90011028"}}